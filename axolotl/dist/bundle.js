(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Decoder:()=>ue,Encoder:()=>de,PacketType:()=>le,protocol:()=>ce});const n=Object.create(null);n.open="0",n.close="1",n.ping="2",n.pong="3",n.message="4",n.upgrade="5",n.noop="6";const s=Object.create(null);Object.keys(n).forEach((e=>{s[n[e]]=e}));const i={type:"error",data:"parser error"},o="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),r="function"==typeof ArrayBuffer,a=e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer instanceof ArrayBuffer,h=({type:e,data:t},s,i)=>o&&t instanceof Blob?s?i(t):c(t,i):r&&(t instanceof ArrayBuffer||a(t))?s?i(t):c(new Blob([t]),i):i(n[e]+(t||"")),c=(e,t)=>{const n=new FileReader;return n.onload=function(){const e=n.result.split(",")[1];t("b"+(e||""))},n.readAsDataURL(e)};function l(e){return e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}let d;const p="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let e=0;e<64;e++)p["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(e)]=e;const u="function"==typeof ArrayBuffer,y=(e,t)=>{if("string"!=typeof e)return{type:"message",data:f(e,t)};const n=e.charAt(0);return"b"===n?{type:"message",data:m(e.substring(1),t)}:s[n]?e.length>1?{type:s[n],data:e.substring(1)}:{type:s[n]}:i},m=(e,t)=>{if(u){const n=(e=>{let t,n,s,i,o,r=.75*e.length,a=e.length,h=0;"="===e[e.length-1]&&(r--,"="===e[e.length-2]&&r--);const c=new ArrayBuffer(r),l=new Uint8Array(c);for(t=0;t<a;t+=4)n=p[e.charCodeAt(t)],s=p[e.charCodeAt(t+1)],i=p[e.charCodeAt(t+2)],o=p[e.charCodeAt(t+3)],l[h++]=n<<2|s>>4,l[h++]=(15&s)<<4|i>>2,l[h++]=(3&i)<<6|63&o;return c})(e);return f(n,t)}return{base64:!0,data:e}},f=(e,t)=>"blob"===t?e instanceof Blob?e:new Blob([e]):e instanceof ArrayBuffer?e:e.buffer,g=String.fromCharCode(30);let v;function E(e){return e.reduce(((e,t)=>e+t.length),0)}function x(e,t){if(e[0].length===t)return e.shift();const n=new Uint8Array(t);let s=0;for(let i=0;i<t;i++)n[i]=e[0][s++],s===e[0].length&&(e.shift(),s=0);return e.length&&s<e[0].length&&(e[0]=e[0].slice(s)),n}function _(e){if(e)return function(e){for(var t in _.prototype)e[t]=_.prototype[t];return e}(e)}_.prototype.on=_.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},_.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},_.prototype.off=_.prototype.removeListener=_.prototype.removeAllListeners=_.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,s=this._callbacks["$"+e];if(!s)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<s.length;i++)if((n=s[i])===t||n.fn===t){s.splice(i,1);break}return 0===s.length&&delete this._callbacks["$"+e],this},_.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),n=this._callbacks["$"+e],s=1;s<arguments.length;s++)t[s-1]=arguments[s];if(n){s=0;for(var i=(n=n.slice(0)).length;s<i;++s)n[s].apply(this,t)}return this},_.prototype.emitReserved=_.prototype.emit,_.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},_.prototype.hasListeners=function(e){return!!this.listeners(e).length};const k="function"==typeof Promise&&"function"==typeof Promise.resolve?e=>Promise.resolve().then(e):(e,t)=>t(e,0),I="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")();function b(e,...t){return t.reduce(((t,n)=>(e.hasOwnProperty(n)&&(t[n]=e[n]),t)),{})}const w=I.setTimeout,S=I.clearTimeout;function R(e,t){t.useNativeTimers?(e.setTimeoutFn=w.bind(I),e.clearTimeoutFn=S.bind(I)):(e.setTimeoutFn=I.setTimeout.bind(I),e.clearTimeoutFn=I.clearTimeout.bind(I))}function A(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)}class O extends Error{constructor(e,t,n){super(e),this.description=t,this.context=n,this.type="TransportError"}}class P extends _{constructor(e){super(),this.writable=!1,R(this,e),this.opts=e,this.query=e.query,this.socket=e.socket,this.supportsBinary=!e.forceBase64}onError(e,t,n){return super.emitReserved("error",new O(e,t,n)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(e){"open"===this.readyState&&this.write(e)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const t=y(e,this.socket.binaryType);this.onPacket(t)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,t={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}_hostname(){const e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(e){const t=function(e){let t="";for(let n in e)e.hasOwnProperty(n)&&(t.length&&(t+="&"),t+=encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t}(e);return t.length?"?"+t:""}}class T extends P{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(e){this.readyState="pausing";const t=()=>{this.readyState="paused",e()};if(this._polling||!this.writable){let e=0;this._polling&&(e++,this.once("pollComplete",(function(){--e||t()}))),this.writable||(e++,this.once("drain",(function(){--e||t()})))}else t()}_poll(){this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){((e,t)=>{const n=e.split(g),s=[];for(let e=0;e<n.length;e++){const i=y(n[e],t);if(s.push(i),"error"===i.type)break}return s})(e,this.socket.binaryType).forEach((e=>{if("opening"===this.readyState&&"open"===e.type&&this.onOpen(),"close"===e.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(e)})),"closed"!==this.readyState&&(this._polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState&&this._poll())}doClose(){const e=()=>{this.write([{type:"close"}])};"open"===this.readyState?e():this.once("open",e)}write(e){this.writable=!1,((e,t)=>{const n=e.length,s=new Array(n);let i=0;e.forEach(((e,o)=>{h(e,!1,(e=>{s[o]=e,++i===n&&t(s.join(g))}))}))})(e,(e=>{this.doWrite(e,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){const e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=A()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}}let C=!1;try{C="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(e){}const L=C;function M(){}class N extends T{constructor(e){if(super(e),"undefined"!=typeof location){const t="https:"===location.protocol;let n=location.port;n||(n=t?"443":"80"),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||n!==e.port}}doWrite(e,t){const n=this.request({method:"POST",data:e});n.on("success",t),n.on("error",((e,t)=>{this.onError("xhr post error",e,t)}))}doPoll(){const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",((e,t)=>{this.onError("xhr poll error",e,t)})),this.pollXhr=e}}class D extends _{constructor(e,t,n){super(),this.createRequest=e,R(this,n),this._opts=n,this._method=n.method||"GET",this._uri=t,this._data=void 0!==n.data?n.data:null,this._create()}_create(){var e;const t=b(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");t.xdomain=!!this._opts.xd;const n=this._xhr=this.createRequest(t);try{n.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){n.setDisableHeaderCheck&&n.setDisableHeaderCheck(!0);for(let e in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(e)&&n.setRequestHeader(e,this._opts.extraHeaders[e])}}catch(e){}if("POST"===this._method)try{n.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{n.setRequestHeader("Accept","*/*")}catch(e){}null===(e=this._opts.cookieJar)||void 0===e||e.addCookies(n),"withCredentials"in n&&(n.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(n.timeout=this._opts.requestTimeout),n.onreadystatechange=()=>{var e;3===n.readyState&&(null===(e=this._opts.cookieJar)||void 0===e||e.parseCookies(n.getResponseHeader("set-cookie"))),4===n.readyState&&(200===n.status||1223===n.status?this._onLoad():this.setTimeoutFn((()=>{this._onError("number"==typeof n.status?n.status:0)}),0))},n.send(this._data)}catch(e){return void this.setTimeoutFn((()=>{this._onError(e)}),0)}"undefined"!=typeof document&&(this._index=D.requestsCount++,D.requests[this._index]=this)}_onError(e){this.emitReserved("error",e,this._xhr),this._cleanup(!0)}_cleanup(e){if(void 0!==this._xhr&&null!==this._xhr){if(this._xhr.onreadystatechange=M,e)try{this._xhr.abort()}catch(e){}"undefined"!=typeof document&&delete D.requests[this._index],this._xhr=null}}_onLoad(){const e=this._xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}function B(){for(let e in D.requests)D.requests.hasOwnProperty(e)&&D.requests[e].abort()}D.requestsCount=0,D.requests={},"undefined"!=typeof document&&("function"==typeof attachEvent?attachEvent("onunload",B):"function"==typeof addEventListener&&addEventListener("onpagehide"in I?"pagehide":"unload",B,!1));const H=function(){const e=U({xdomain:!1});return e&&null!==e.responseType}();function U(e){const t=e.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!t||L))return new XMLHttpRequest}catch(e){}if(!t)try{return new(I[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(e){}}const Y="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class F extends P{get name(){return"websocket"}doOpen(){const e=this.uri(),t=this.opts.protocols,n=Y?{}:b(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(n.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(e,t,n)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const n=e[t],s=t===e.length-1;h(n,this.supportsBinary,(e=>{try{this.doWrite(n,e)}catch(e){}s&&k((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=A()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}}const X=I.WebSocket||I.MozWebSocket,W={websocket:class extends F{createSocket(e,t,n){return Y?new X(e,t,n):t?new X(e,t):new X(e)}doWrite(e,t){this.ws.send(t)}},webtransport:class extends P{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(e){return this.emitReserved("error",e)}this._transport.closed.then((()=>{this.onClose()})).catch((e=>{this.onError("webtransport error",e)})),this._transport.ready.then((()=>{this._transport.createBidirectionalStream().then((e=>{const t=function(e,t){v||(v=new TextDecoder);const n=[];let s=0,o=-1,r=!1;return new TransformStream({transform(a,h){for(n.push(a);;){if(0===s){if(E(n)<1)break;const e=x(n,1);r=!(128&~e[0]),o=127&e[0],s=o<126?3:126===o?1:2}else if(1===s){if(E(n)<2)break;const e=x(n,2);o=new DataView(e.buffer,e.byteOffset,e.length).getUint16(0),s=3}else if(2===s){if(E(n)<8)break;const e=x(n,8),t=new DataView(e.buffer,e.byteOffset,e.length),r=t.getUint32(0);if(r>Math.pow(2,21)-1){h.enqueue(i);break}o=r*Math.pow(2,32)+t.getUint32(4),s=3}else{if(E(n)<o)break;const e=x(n,o);h.enqueue(y(r?e:v.decode(e),t)),s=0}if(0===o||o>e){h.enqueue(i);break}}}})}(Number.MAX_SAFE_INTEGER,this.socket.binaryType),n=e.readable.pipeThrough(t).getReader(),s=new TransformStream({transform(e,t){!function(e,t){o&&e.data instanceof Blob?e.data.arrayBuffer().then(l).then(t):r&&(e.data instanceof ArrayBuffer||a(e.data))?t(l(e.data)):h(e,!1,(e=>{d||(d=new TextEncoder),t(d.encode(e))}))}(e,(n=>{const s=n.length;let i;if(s<126)i=new Uint8Array(1),new DataView(i.buffer).setUint8(0,s);else if(s<65536){i=new Uint8Array(3);const e=new DataView(i.buffer);e.setUint8(0,126),e.setUint16(1,s)}else{i=new Uint8Array(9);const e=new DataView(i.buffer);e.setUint8(0,127),e.setBigUint64(1,BigInt(s))}e.data&&"string"!=typeof e.data&&(i[0]|=128),t.enqueue(i),t.enqueue(n)}))}});s.readable.pipeTo(e.writable),this._writer=s.writable.getWriter();const c=()=>{n.read().then((({done:e,value:t})=>{e||(this.onPacket(t),c())})).catch((e=>{}))};c();const p={type:"open"};this.query.sid&&(p.data=`{"sid":"${this.query.sid}"}`),this._writer.write(p).then((()=>this.onOpen()))}))}))}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const n=e[t],s=t===e.length-1;this._writer.write(n).then((()=>{s&&k((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){var e;null===(e=this._transport)||void 0===e||e.close()}},polling:class extends N{constructor(e){super(e);const t=e&&e.forceBase64;this.supportsBinary=H&&!t}request(e={}){return Object.assign(e,{xd:this.xd},this.opts),new D(U,this.uri(),e)}}},q=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,z=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function j(e){if(e.length>8e3)throw"URI too long";const t=e,n=e.indexOf("["),s=e.indexOf("]");-1!=n&&-1!=s&&(e=e.substring(0,n)+e.substring(n,s).replace(/:/g,";")+e.substring(s,e.length));let i=q.exec(e||""),o={},r=14;for(;r--;)o[z[r]]=i[r]||"";return-1!=n&&-1!=s&&(o.source=t,o.host=o.host.substring(1,o.host.length-1).replace(/;/g,":"),o.authority=o.authority.replace("[","").replace("]","").replace(/;/g,":"),o.ipv6uri=!0),o.pathNames=function(e,t){const n=t.replace(/\/{2,9}/g,"/").split("/");return"/"!=t.slice(0,1)&&0!==t.length||n.splice(0,1),"/"==t.slice(-1)&&n.splice(n.length-1,1),n}(0,o.path),o.queryKey=function(e,t){const n={};return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(e,t,s){t&&(n[t]=s)})),n}(0,o.query),o}const V="function"==typeof addEventListener&&"function"==typeof removeEventListener,K=[];V&&addEventListener("offline",(()=>{K.forEach((e=>e()))}),!1);class Z extends _{constructor(e,t){if(super(),this.binaryType="arraybuffer",this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,e&&"object"==typeof e&&(t=e,e=null),e){const n=j(e);t.hostname=n.host,t.secure="https"===n.protocol||"wss"===n.protocol,t.port=n.port,n.query&&(t.query=n.query)}else t.host&&(t.hostname=j(t.host).host);R(this,t),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},t.transports.forEach((e=>{const t=e.prototype.name;this.transports.push(t),this._transportsByName[t]=e})),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},t),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=function(e){let t={},n=e.split("&");for(let e=0,s=n.length;e<s;e++){let s=n[e].split("=");t[decodeURIComponent(s[0])]=decodeURIComponent(s[1])}return t}(this.opts.query)),V&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},K.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=void 0),this._open()}createTransport(e){const t=Object.assign({},this.opts.query);t.EIO=4,t.transport=e,this.id&&(t.sid=this.id);const n=Object.assign({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return new this._transportsByName[e](n)}_open(){if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);const e=this.opts.rememberUpgrade&&Z.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket")?"websocket":this.transports[0];this.readyState="opening";const t=this.createTransport(e);t.open(),this.setTransport(t)}setTransport(e){this.transport&&this.transport.removeAllListeners(),this.transport=e,e.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",(e=>this._onClose("transport close",e)))}onOpen(){this.readyState="open",Z.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush()}_onPacket(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const t=new Error("server error");t.code=e.data,this._onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this._pingInterval=e.pingInterval,this._pingTimeout=e.pingTimeout,this._maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const e=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+e,this._pingTimeoutTimer=this.setTimeoutFn((()=>{this._onClose("ping timeout")}),e),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this._getWritablePackets();this.transport.send(e),this._prevBufferLen=e.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let n=0;n<this.writeBuffer.length;n++){const s=this.writeBuffer[n].data;if(s&&(e+="string"==typeof(t=s)?function(e){let t=0,n=0;for(let s=0,i=e.length;s<i;s++)t=e.charCodeAt(s),t<128?n+=1:t<2048?n+=2:t<55296||t>=57344?n+=3:(s++,n+=4);return n}(t):Math.ceil(1.33*(t.byteLength||t.size))),n>0&&e>this._maxPayload)return this.writeBuffer.slice(0,n);e+=2}var t;return this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const e=Date.now()>this._pingTimeoutTime;return e&&(this._pingTimeoutTime=0,k((()=>{this._onClose("ping timeout")}),this.setTimeoutFn)),e}write(e,t,n){return this._sendPacket("message",e,t,n),this}send(e,t,n){return this._sendPacket("message",e,t,n),this}_sendPacket(e,t,n,s){if("function"==typeof t&&(s=t,t=void 0),"function"==typeof n&&(s=n,n=null),"closing"===this.readyState||"closed"===this.readyState)return;(n=n||{}).compress=!1!==n.compress;const i={type:e,data:t,options:n};this.emitReserved("packetCreate",i),this.writeBuffer.push(i),s&&this.once("flush",s),this.flush()}close(){const e=()=>{this._onClose("forced close"),this.transport.close()},t=()=>{this.off("upgrade",t),this.off("upgradeError",t),e()},n=()=>{this.once("upgrade",t),this.once("upgradeError",t)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?n():e()})):this.upgrading?n():e()),this}_onError(e){if(Z.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&"opening"===this.readyState)return this.transports.shift(),this._open();this.emitReserved("error",e),this._onClose("transport error",e)}_onClose(e,t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){if(this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),V&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const e=K.indexOf(this._offlineEventListener);-1!==e&&K.splice(e,1)}this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this._prevBufferLen=0}}}Z.protocol=4;class G extends Z{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),"open"===this.readyState&&this.opts.upgrade)for(let e=0;e<this._upgrades.length;e++)this._probe(this._upgrades[e])}_probe(e){let t=this.createTransport(e),n=!1;Z.priorWebsocketSuccess=!1;const s=()=>{n||(t.send([{type:"ping",data:"probe"}]),t.once("packet",(e=>{if(!n)if("pong"===e.type&&"probe"===e.data){if(this.upgrading=!0,this.emitReserved("upgrading",t),!t)return;Z.priorWebsocketSuccess="websocket"===t.name,this.transport.pause((()=>{n||"closed"!==this.readyState&&(c(),this.setTransport(t),t.send([{type:"upgrade"}]),this.emitReserved("upgrade",t),t=null,this.upgrading=!1,this.flush())}))}else{const e=new Error("probe error");e.transport=t.name,this.emitReserved("upgradeError",e)}})))};function i(){n||(n=!0,c(),t.close(),t=null)}const o=e=>{const n=new Error("probe error: "+e);n.transport=t.name,i(),this.emitReserved("upgradeError",n)};function r(){o("transport closed")}function a(){o("socket closed")}function h(e){t&&e.name!==t.name&&i()}const c=()=>{t.removeListener("open",s),t.removeListener("error",o),t.removeListener("close",r),this.off("close",a),this.off("upgrading",h)};t.once("open",s),t.once("error",o),t.once("close",r),this.once("close",a),this.once("upgrading",h),-1!==this._upgrades.indexOf("webtransport")&&"webtransport"!==e?this.setTimeoutFn((()=>{n||t.open()}),200):t.open()}onHandshake(e){this._upgrades=this._filterUpgrades(e.upgrades),super.onHandshake(e)}_filterUpgrades(e){const t=[];for(let n=0;n<e.length;n++)~this.transports.indexOf(e[n])&&t.push(e[n]);return t}}class $ extends G{constructor(e,t={}){const n="object"==typeof e?e:t;(!n.transports||n.transports&&"string"==typeof n.transports[0])&&(n.transports=(n.transports||["polling","websocket","webtransport"]).map((e=>W[e])).filter((e=>!!e))),super(e,n)}}const J="function"==typeof ArrayBuffer,Q=Object.prototype.toString,ee="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Q.call(Blob),te="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===Q.call(File);function ne(e){return J&&(e instanceof ArrayBuffer||(e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer)(e))||ee&&e instanceof Blob||te&&e instanceof File}function se(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e)){for(let t=0,n=e.length;t<n;t++)if(se(e[t]))return!0;return!1}if(ne(e))return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return se(e.toJSON(),!0);for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&se(e[t]))return!0;return!1}function ie(e){const t=[],n=e.data,s=e;return s.data=oe(n,t),s.attachments=t.length,{packet:s,buffers:t}}function oe(e,t){if(!e)return e;if(ne(e)){const n={_placeholder:!0,num:t.length};return t.push(e),n}if(Array.isArray(e)){const n=new Array(e.length);for(let s=0;s<e.length;s++)n[s]=oe(e[s],t);return n}if("object"==typeof e&&!(e instanceof Date)){const n={};for(const s in e)Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=oe(e[s],t));return n}return e}function re(e,t){return e.data=ae(e.data,t),delete e.attachments,e}function ae(e,t){if(!e)return e;if(e&&!0===e._placeholder){if("number"==typeof e.num&&e.num>=0&&e.num<t.length)return t[e.num];throw new Error("illegal attachments")}if(Array.isArray(e))for(let n=0;n<e.length;n++)e[n]=ae(e[n],t);else if("object"==typeof e)for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(e[n]=ae(e[n],t));return e}const he=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"],ce=5;var le;!function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(le||(le={}));class de{constructor(e){this.replacer=e}encode(e){return e.type!==le.EVENT&&e.type!==le.ACK||!se(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===le.EVENT?le.BINARY_EVENT:le.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}encodeAsString(e){let t=""+e.type;return e.type!==le.BINARY_EVENT&&e.type!==le.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),t}encodeAsBinary(e){const t=ie(e),n=this.encodeAsString(t.packet),s=t.buffers;return s.unshift(n),s}}function pe(e){return"[object Object]"===Object.prototype.toString.call(e)}class ue extends _{constructor(e){super(),this.reviver=e}add(e){let t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");t=this.decodeString(e);const n=t.type===le.BINARY_EVENT;n||t.type===le.BINARY_ACK?(t.type=n?le.EVENT:le.ACK,this.reconstructor=new ye(t),0===t.attachments&&super.emitReserved("decoded",t)):super.emitReserved("decoded",t)}else{if(!ne(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");t=this.reconstructor.takeBinaryData(e),t&&(this.reconstructor=null,super.emitReserved("decoded",t))}}decodeString(e){let t=0;const n={type:Number(e.charAt(0))};if(void 0===le[n.type])throw new Error("unknown packet type "+n.type);if(n.type===le.BINARY_EVENT||n.type===le.BINARY_ACK){const s=t+1;for(;"-"!==e.charAt(++t)&&t!=e.length;);const i=e.substring(s,t);if(i!=Number(i)||"-"!==e.charAt(t))throw new Error("Illegal attachments");n.attachments=Number(i)}if("/"===e.charAt(t+1)){const s=t+1;for(;++t&&","!==e.charAt(t)&&t!==e.length;);n.nsp=e.substring(s,t)}else n.nsp="/";const s=e.charAt(t+1);if(""!==s&&Number(s)==s){const s=t+1;for(;++t;){const n=e.charAt(t);if(null==n||Number(n)!=n){--t;break}if(t===e.length)break}n.id=Number(e.substring(s,t+1))}if(e.charAt(++t)){const s=this.tryParse(e.substr(t));if(!ue.isPayloadValid(n.type,s))throw new Error("invalid payload");n.data=s}return n}tryParse(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}static isPayloadValid(e,t){switch(e){case le.CONNECT:return pe(t);case le.DISCONNECT:return void 0===t;case le.CONNECT_ERROR:return"string"==typeof t||pe(t);case le.EVENT:case le.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===he.indexOf(t[0]));case le.ACK:case le.BINARY_ACK:return Array.isArray(t)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}class ye{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const e=re(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}function me(e,t,n){return e.on(t,n),function(){e.off(t,n)}}const fe=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class ge extends _{constructor(e,t,n){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=t,n&&n.auth&&(this.auth=n.auth),this._opts=Object.assign({},n),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[me(e,"open",this.onopen.bind(this)),me(e,"packet",this.onpacket.bind(this)),me(e,"error",this.onerror.bind(this)),me(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...t){var n,s,i;if(fe.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(t.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(t),this;const o={type:le.EVENT,data:t,options:{}};if(o.options.compress=!1!==this.flags.compress,"function"==typeof t[t.length-1]){const e=this.ids++,n=t.pop();this._registerAckCallback(e,n),o.id=e}const r=null===(s=null===(n=this.io.engine)||void 0===n?void 0:n.transport)||void 0===s?void 0:s.writable,a=this.connected&&!(null===(i=this.io.engine)||void 0===i?void 0:i._hasPingExpired());return this.flags.volatile&&!r||(a?(this.notifyOutgoingListeners(o),this.packet(o)):this.sendBuffer.push(o)),this.flags={},this}_registerAckCallback(e,t){var n;const s=null!==(n=this.flags.timeout)&&void 0!==n?n:this._opts.ackTimeout;if(void 0===s)return void(this.acks[e]=t);const i=this.io.setTimeoutFn((()=>{delete this.acks[e];for(let t=0;t<this.sendBuffer.length;t++)this.sendBuffer[t].id===e&&this.sendBuffer.splice(t,1);t.call(this,new Error("operation has timed out"))}),s),o=(...e)=>{this.io.clearTimeoutFn(i),t.apply(this,e)};o.withError=!0,this.acks[e]=o}emitWithAck(e,...t){return new Promise(((n,s)=>{const i=(e,t)=>e?s(e):n(t);i.withError=!0,t.push(i),this.emit(e,...t)}))}_addToQueue(e){let t;"function"==typeof e[e.length-1]&&(t=e.pop());const n={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push(((e,...s)=>{if(n===this._queue[0])return null!==e?n.tryCount>this._opts.retries&&(this._queue.shift(),t&&t(e)):(this._queue.shift(),t&&t(null,...s)),n.pending=!1,this._drainQueue()})),this._queue.push(n),this._drainQueue()}_drainQueue(e=!1){if(!this.connected||0===this._queue.length)return;const t=this._queue[0];t.pending&&!e||(t.pending=!0,t.tryCount++,this.flags=t.flags,this.emit.apply(this,t.args))}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){"function"==typeof this.auth?this.auth((e=>{this._sendConnectPacket(e)})):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:le.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,t){this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach((e=>{if(!this.sendBuffer.some((t=>String(t.id)===e))){const t=this.acks[e];delete this.acks[e],t.withError&&t.call(this,new Error("socket has been disconnected"))}}))}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case le.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case le.EVENT:case le.BINARY_EVENT:this.onevent(e);break;case le.ACK:case le.BINARY_ACK:this.onack(e);break;case le.DISCONNECT:this.ondisconnect();break;case le.CONNECT_ERROR:this.destroy();const t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}onevent(e){const t=e.data||[];null!=e.id&&t.push(this.ack(e.id)),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const t=this._anyListeners.slice();for(const n of t)n.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}ack(e){const t=this;let n=!1;return function(...s){n||(n=!0,t.packet({type:le.ACK,id:e,data:s}))}}onack(e){const t=this.acks[e.id];"function"==typeof t&&(delete this.acks[e.id],t.withError&&e.data.unshift(null),t.apply(this,e.data))}onconnect(e,t){this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach((e=>this.emitEvent(e))),this.receiveBuffer=[],this.sendBuffer.forEach((e=>{this.notifyOutgoingListeners(e),this.packet(e)})),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((e=>e())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:le.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const t=this._anyListeners;for(let n=0;n<t.length;n++)if(e===t[n])return t.splice(n,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const t=this._anyOutgoingListeners;for(let n=0;n<t.length;n++)if(e===t[n])return t.splice(n,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const t=this._anyOutgoingListeners.slice();for(const n of t)n.apply(this,e.data)}}}function ve(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}ve.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),n=Math.floor(t*this.jitter*e);e=1&Math.floor(10*t)?e+n:e-n}return 0|Math.min(e,this.max)},ve.prototype.reset=function(){this.attempts=0},ve.prototype.setMin=function(e){this.ms=e},ve.prototype.setMax=function(e){this.max=e},ve.prototype.setJitter=function(e){this.jitter=e};class Ee extends _{constructor(e,n){var s;super(),this.nsps={},this.subs=[],e&&"object"==typeof e&&(n=e,e=void 0),(n=n||{}).path=n.path||"/socket.io",this.opts=n,R(this,n),this.reconnection(!1!==n.reconnection),this.reconnectionAttempts(n.reconnectionAttempts||1/0),this.reconnectionDelay(n.reconnectionDelay||1e3),this.reconnectionDelayMax(n.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(s=n.randomizationFactor)&&void 0!==s?s:.5),this.backoff=new ve({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==n.timeout?2e4:n.timeout),this._readyState="closed",this.uri=e;const i=n.parser||t;this.encoder=new i.Encoder,this.decoder=new i.Decoder,this._autoConnect=!1!==n.autoConnect,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,e||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}randomizationFactor(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}reconnectionDelayMax(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(e){if(~this._readyState.indexOf("open"))return this;this.engine=new $(this.uri,this.opts);const t=this.engine,n=this;this._readyState="opening",this.skipReconnect=!1;const s=me(t,"open",(function(){n.onopen(),e&&e()})),i=t=>{this.cleanup(),this._readyState="closed",this.emitReserved("error",t),e?e(t):this.maybeReconnectOnOpen()},o=me(t,"error",i);if(!1!==this._timeout){const e=this._timeout,n=this.setTimeoutFn((()=>{s(),i(new Error("timeout")),t.close()}),e);this.opts.autoUnref&&n.unref(),this.subs.push((()=>{this.clearTimeoutFn(n)}))}return this.subs.push(s),this.subs.push(o),this}connect(e){return this.open(e)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push(me(e,"ping",this.onping.bind(this)),me(e,"data",this.ondata.bind(this)),me(e,"error",this.onerror.bind(this)),me(e,"close",this.onclose.bind(this)),me(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}ondecoded(e){k((()=>{this.emitReserved("packet",e)}),this.setTimeoutFn)}onerror(e){this.emitReserved("error",e)}socket(e,t){let n=this.nsps[e];return n?this._autoConnect&&!n.active&&n.connect():(n=new ge(this,e,t),this.nsps[e]=n),n}_destroy(e){const t=Object.keys(this.nsps);for(const e of t)if(this.nsps[e].active)return;this._close()}_packet(e){const t=this.encoder.encode(e);for(let n=0;n<t.length;n++)this.engine.write(t[n],e.options)}cleanup(){this.subs.forEach((e=>e())),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(e,t){var n;this.cleanup(),null===(n=this.engine)||void 0===n||n.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const t=this.backoff.duration();this._reconnecting=!0;const n=this.setTimeoutFn((()=>{e.skipReconnect||(this.emitReserved("reconnect_attempt",e.backoff.attempts),e.skipReconnect||e.open((t=>{t?(e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",t)):e.onreconnect()})))}),t);this.opts.autoUnref&&n.unref(),this.subs.push((()=>{this.clearTimeoutFn(n)}))}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}const xe={};function _e(e,t){"object"==typeof e&&(t=e,e=void 0);const n=function(e,t="",n){let s=e;n=n||"undefined"!=typeof location&&location,null==e&&(e=n.protocol+"//"+n.host),"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?n.protocol+e:n.host+e),/^(https?|wss?):\/\//.test(e)||(e=void 0!==n?n.protocol+"//"+e:"https://"+e),s=j(e)),s.port||(/^(http|ws)$/.test(s.protocol)?s.port="80":/^(http|ws)s$/.test(s.protocol)&&(s.port="443")),s.path=s.path||"/";const i=-1!==s.host.indexOf(":")?"["+s.host+"]":s.host;return s.id=s.protocol+"://"+i+":"+s.port+t,s.href=s.protocol+"://"+i+(n&&n.port===s.port?"":":"+s.port),s}(e,(t=t||{}).path||"/socket.io"),s=n.source,i=n.id,o=n.path,r=xe[i]&&o in xe[i].nsps;let a;return t.forceNew||t["force new connection"]||!1===t.multiplex||r?a=new Ee(s,t):(xe[i]||(xe[i]=new Ee(s,t)),a=xe[i]),n.query&&!t.query&&(t.query=n.queryKey),a.socket(n.path,t)}Object.assign(_e,{Manager:Ee,Socket:ge,io:_e,connect:_e});const ke=new Blob(["\n// Worker code starts here\nconst WORLD_WIDTH = 10000;  // Changed from 2000 to 10000\nconst WORLD_HEIGHT = 2000;\nconst FISH_DETECTION_RADIUS = 500;  // How far fish can detect players\nconst PLAYER_BASE_SPEED = 5;  // Base player speed to match\nconst FISH_RETURN_SPEED = 0.5;  // Speed at which fish return to their normal behavior\nconst ENEMY_COUNT = 100;\nconst OBSTACLE_COUNT = 20;\nconst ENEMY_CORAL_PROBABILITY = 0.3;\nconst ENEMY_CORAL_HEALTH = 50;\nconst ENEMY_CORAL_DAMAGE = 5;\nconst PLAYER_MAX_HEALTH = 100;\nconst PLAYER_DAMAGE = 10;\nconst ITEM_COUNT = 10;\nconst MAX_INVENTORY_SIZE = 5;\nconst PLAYER_SIZE = 40;\nconst COLLISION_RADIUS = PLAYER_SIZE / 2;\nconst ENEMY_SIZE = 40;\nconst RESPAWN_INVULNERABILITY_TIME = 3000;\nconst KNOCKBACK_FORCE = 20;\nconst KNOCKBACK_RECOVERY_SPEED = 0.9;\nconst DECORATION_COUNT = 100;  // Number of palms to spawn\nvar BASE_XP_REQUIREMENT = 100;\nvar XP_MULTIPLIER = 1.5;\nvar HEALTH_PER_LEVEL = 10;\nvar DAMAGE_PER_LEVEL = 2;\nvar DROP_CHANCES = {\n    common: 0.1, // 10% chance\n    uncommon: 0.2, // 20% chance\n    rare: 0.3, // 30% chance\n    epic: 0.4, // 40% chance\n    legendary: 0.5, // 50% chance\n    mythic: 0.75 // 75% chance\n};\n\nconst ENEMY_TIERS = {\n    common: { health: 20, speed: 0.5, damage: 5, probability: 0.4 },\n    uncommon: { health: 40, speed: 0.75, damage: 10, probability: 0.3 },\n    rare: { health: 60, speed: 1, damage: 15, probability: 0.15 },\n    epic: { health: 80, speed: 1.25, damage: 20, probability: 0.1 },\n    legendary: { health: 100, speed: 1.5, damage: 25, probability: 0.04 },\n    mythic: { health: 150, speed: 2, damage: 30, probability: 0.01 }\n};\nvar ZONE_BOUNDARIES = {\n    common: { start: 0, end: 2000 },\n    uncommon: { start: 2000, end: 4000 },\n    rare: { start: 4000, end: 6000 },\n    epic: { start: 6000, end: 8000 },\n    legendary: { start: 8000, end: 9000 },\n    mythic: { start: 9000, end: WORLD_WIDTH }\n};\nvar ENEMY_SIZE_MULTIPLIERS = {\n    common: 1.0,\n    uncommon: 1.2,\n    rare: 1.4,\n    epic: 1.6,\n    legendary: 1.8,\n    mythic: 2.0\n};\n\nconst players = {};\nconst enemies = [];\nconst obstacles = [];\nconst items = [];\nconst dots = [];\nconst decorations = [];\nconst sands = [];\n\n// Helper function to get random position in a specific zone\nfunction getRandomPositionInZone(zoneIndex) {\n    const zoneWidth = WORLD_WIDTH / 6;  // 6 zones\n    const startX = zoneIndex * zoneWidth;\n    \n    // For legendary and mythic zones, ensure they're in the rightmost areas\n    if (zoneIndex >= 4) {  // Legendary and Mythic zones\n        const adjustedStartX = WORLD_WIDTH - (6 - zoneIndex) * (zoneWidth / 2);  // Start from right side\n        return {\n            x: adjustedStartX + Math.random() * (WORLD_WIDTH - adjustedStartX),\n            y: Math.random() * WORLD_HEIGHT\n        };\n    }\n    \n    return {\n        x: startX + Math.random() * zoneWidth,\n        y: Math.random() * WORLD_HEIGHT\n    };\n}\nfunction getXPFromEnemy(enemy) {\n    var tierMultipliers = {\n        common: 10,\n        uncommon: 20,\n        rare: 40,\n        epic: 80,\n        legendary: 160,\n        mythic: 320\n    };\n    return tierMultipliers[enemy.tier];\n}\nfunction addXPToPlayer(player, xp) {\n    player.xp += xp;\n    while (player.xp >= player.xpToNextLevel) {\n        player.xp -= player.xpToNextLevel;\n        player.level++;\n        player.xpToNextLevel = calculateXPRequirement(player.level);\n        handleLevelUp(player);\n    }\n    socket.emit('xpGained', {\n        playerId: player.id,\n        xp: xp,\n        totalXp: player.xp,\n        level: player.level,\n        xpToNextLevel: player.xpToNextLevel,\n        maxHealth: player.maxHealth,\n        damage: player.damage\n    });\n}\nfunction handleLevelUp(player) {\n    player.maxHealth += HEALTH_PER_LEVEL;\n    player.health = player.maxHealth;\n    player.damage += DAMAGE_PER_LEVEL;\n    socket.emit('levelUp', {\n        playerId: player.id,\n        level: player.level,\n        maxHealth: player.maxHealth,\n        damage: player.damage\n    });\n}\nfunction respawnPlayer(player) {\n    // Determine spawn zone based on player level without losing levels\n    var spawnX;\n    if (player.level <= 5) {\n        spawnX = Math.random() * ZONE_BOUNDARIES.common.end;\n    }\n    else if (player.level <= 10) {\n        spawnX = ZONE_BOUNDARIES.uncommon.start + Math.random() * (ZONE_BOUNDARIES.uncommon.end - ZONE_BOUNDARIES.uncommon.start);\n    }\n    else if (player.level <= 15) {\n        spawnX = ZONE_BOUNDARIES.rare.start + Math.random() * (ZONE_BOUNDARIES.rare.end - ZONE_BOUNDARIES.rare.start);\n    }\n    else if (player.level <= 25) {\n        spawnX = ZONE_BOUNDARIES.epic.start + Math.random() * (ZONE_BOUNDARIES.epic.end - ZONE_BOUNDARIES.epic.start);\n    }\n    else if (player.level <= 40) {\n        spawnX = ZONE_BOUNDARIES.legendary.start + Math.random() * (ZONE_BOUNDARIES.legendary.end - ZONE_BOUNDARIES.legendary.start);\n    }\n    else {\n        spawnX = ZONE_BOUNDARIES.mythic.start + Math.random() * (ZONE_BOUNDARIES.mythic.end - ZONE_BOUNDARIES.mythic.start);\n    }\n    // Reset health and position but keep level and stats\n    player.health = player.maxHealth;\n    player.x = spawnX;\n    player.y = Math.random() * WORLD_HEIGHT;\n    player.score = Math.max(0, player.score - 10); // Still lose some score\n    player.inventory = [];\n    player.isInvulnerable = true;\n    // Just notify about respawn without level loss\n    socket.emit('playerRespawned', player);\n    setTimeout(function () {\n        player.isInvulnerable = false;\n    }, RESPAWN_INVULNERABILITY_TIME);\n}\n\n// Add these constants at the top with other constants\n\n\nfunction moveEnemies() {\n    if (!enemies || !enemies.length) return;  // Guard against undefined enemies array\n    \n    enemies.forEach(enemy => {\n        if (!enemy) return;  // Guard against undefined enemy objects\n        \n        try {\n            // Apply knockback if it exists\n            if (enemy.knockbackX) {\n                enemy.knockbackX *= KNOCKBACK_RECOVERY_SPEED;\n                enemy.x += enemy.knockbackX;\n                if (Math.abs(enemy.knockbackX) < 0.1) enemy.knockbackX = 0;\n            }\n            if (enemy.knockbackY) {\n                enemy.knockbackY *= KNOCKBACK_RECOVERY_SPEED;\n                enemy.y += enemy.knockbackY;\n                if (Math.abs(enemy.knockbackY) < 0.1) enemy.knockbackY = 0;\n            }\n\n            // Find nearest player for fish behavior\n            let nearestPlayer = null;\n            let nearestDistance = Infinity;\n            \n            Object.values(players).forEach(player => {\n                const dx = player.x - enemy.x;\n                const dy = player.y - enemy.y;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                \n                if (distance < nearestDistance) {\n                    nearestDistance = distance;\n                    nearestPlayer = player;\n                }\n            });\n\n            // Different movement patterns based on enemy type\n            if (enemy.type === 'octopus') {\n                // Random movement for octopus\n                enemy.x += (Math.random() * 4 - 2) * (enemy.speed || 1);\n                enemy.y += (Math.random() * 4 - 2) * (enemy.speed || 1);\n            } else {\n                // Fish behavior\n                if (nearestPlayer && nearestDistance < FISH_DETECTION_RADIUS) {\n                    // Fish detected player - match player speed\n                    const dx = nearestPlayer.x - enemy.x;\n                    const dy = nearestPlayer.y - enemy.y;\n                    const angle = Math.atan2(dy, dx);\n                    \n                    // Update enemy angle for proper facing direction\n                    enemy.angle = angle;\n                    \n                    // Calculate chase speed based on player's current speed\n                    const playerSpeed = 16;\n                    \n                    // Match player speed but consider enemy tier for slight variations\n                    const tierSpeedMultiplier = ENEMY_TIERS[enemy.tier].speed;\n                    const chaseSpeed = playerSpeed * tierSpeedMultiplier;\n                    \n                    // Move towards player matching their speed\n                    enemy.x += Math.cos(angle) * chaseSpeed;\n                    enemy.y += Math.sin(angle) * chaseSpeed;\n                    \n                    // Mark fish as hostile\n                    enemy.isHostile = true;\n                } else {\n                    // Normal fish behavior\n                    enemy.isHostile = false;\n                    \n                    // Return to normal speed gradually\n                    const normalSpeed = ENEMY_TIERS[enemy.tier].speed * 2;\n                    enemy.x += Math.cos(enemy.angle || 0) * normalSpeed;\n                    enemy.y += Math.sin(enemy.angle || 0) * normalSpeed;\n                    \n                    // Randomly change direction occasionally\n                    if (Math.random() < 0.02) {\n                        enemy.angle = Math.random() * Math.PI * 2;\n                    }\n                }\n            }\n\n            // Keep enemies in their respective zones\n            const zoneWidth = WORLD_WIDTH / 6;\n            const tierZones = {\n                common: 0,\n                uncommon: 1,\n                rare: 2,\n                epic: 3,\n                legendary: 4,\n                mythic: 5\n            };\n            \n            const zoneIndex = tierZones[enemy.tier] || 0;\n            const zoneStartX = zoneIndex * zoneWidth;\n            const zoneEndX = (zoneIndex + 1) * zoneWidth;\n            \n            // Add some overlap between zones (10% on each side)\n            const overlap = zoneWidth * 0.1;\n            const minX = Math.max(0, zoneStartX - overlap);\n            const maxX = Math.min(WORLD_WIDTH, zoneEndX + overlap);\n            \n            // Constrain enemy position to its zone\n            enemy.x = Math.max(minX, Math.min(maxX, enemy.x));\n            enemy.y = Math.max(0, Math.min(WORLD_HEIGHT, enemy.y));\n        } catch (error) {\n            console.error('Error moving enemy:', error, enemy);\n        }\n    });\n\n    try {\n        // Filter out any undefined enemies before emitting\n        const validEnemies = enemies.filter(enemy => enemy !== undefined);\n        socket.emit('enemiesUpdate', validEnemies);\n    } catch (error) {\n        console.error('Error emitting enemies update:', error);\n    }\n}\n\n// Update creation functions to use zones\nfunction createDecoration() {\n    const zoneIndex = Math.floor(Math.random() * 6);  // 6 zones\n    const pos = getRandomPositionInZone(zoneIndex);\n    return {\n        x: pos.x,\n        y: pos.y,\n        scale: 0.5 + Math.random() * 1.5\n    };\n}\n\nfunction createEnemy() {\n    const tierRoll = Math.random();\n    let tier = 'common';\n    let cumulativeProbability = 0;\n    for (const [t, data] of Object.entries(ENEMY_TIERS)) {\n        cumulativeProbability += data.probability;\n        if (tierRoll < cumulativeProbability) {\n            tier = t;\n            break;\n        }\n    }\n    const tierData = ENEMY_TIERS[tier];\n    \n    // Map tiers to specific zones, ensuring legendary and mythic are in the rightmost areas\n    const tierZones = {\n        common: 0,\n        uncommon: 1,\n        rare: 2,\n        epic: 3,\n        legendary: 4,\n        mythic: 5\n    };\n    \n    const pos = getRandomPositionInZone(tierZones[tier]);\n    \n    return {\n        id: Math.random().toString(36).substr(2, 9),\n        type: Math.random() < 0.5 ? 'octopus' : 'fish',\n        tier,\n        x: pos.x,\n        y: pos.y,\n        angle: Math.random() * Math.PI * 2,\n        health: tierData.health,\n        speed: tierData.speed,\n        damage: tierData.damage,\n        knockbackX: 0,\n        knockbackY: 0\n    };\n}\n\nfunction createObstacle() {\n    const zoneIndex = Math.floor(Math.random() * 6);\n    const pos = getRandomPositionInZone(zoneIndex);\n    const isEnemy = Math.random() < ENEMY_CORAL_PROBABILITY;\n    return {\n        id: Math.random().toString(36).substr(2, 9),\n        x: pos.x,\n        y: pos.y,\n        width: 50 + Math.random() * 50,\n        height: 50 + Math.random() * 50,\n        type: 'coral',\n        isEnemy,\n        health: isEnemy ? ENEMY_CORAL_HEALTH : undefined\n    };\n}\n\nfunction createItem() {\n    const zoneIndex = Math.floor(Math.random() * 6);\n    const pos = getRandomPositionInZone(zoneIndex);\n    return {\n        id: Math.random().toString(36).substr(2, 9),\n        type: ['health_potion', 'speed_boost', 'shield'][Math.floor(Math.random() * 3)],\n        x: pos.x,\n        y: pos.y\n    };\n}\n\nfunction initializeGame(messageData) {\n    console.log('Initializing game state in worker');\n    \n    // Extract saved progress data with defaults\n    const savedProgress = messageData.savedProgress || {};\n    const level = parseInt(savedProgress.level) || 1;\n    const xp = parseInt(savedProgress.xp) || 0;\n    \n    // Calculate stats based on level\n    const maxHealth = PLAYER_MAX_HEALTH + (HEALTH_PER_LEVEL * (level - 1));\n    const damage = PLAYER_DAMAGE + (DAMAGE_PER_LEVEL * (level - 1));\n    const xpToNextLevel = calculateXPRequirement(level);\n\n    // Start player in the first zone (common)\n    players[socket.id] = {\n        id: socket.id,\n        x: WORLD_WIDTH / 12,  // Center of first zone\n        y: WORLD_HEIGHT / 2,\n        angle: 0,\n        score: 0,\n        velocityX: 0,\n        velocityY: 0,\n        health: maxHealth,  // Start with full health\n        inventory: [],\n        isInvulnerable: true,\n        level: level,\n        xp: xp,\n        xpToNextLevel: xpToNextLevel,\n        maxHealth: maxHealth,\n        damage: damage,\n        lastDamageTaken: 0,\n        isRegenerating: false\n    };\n\n    console.log('Initialized player with stats:', {\n        level,\n        xp,\n        maxHealth,\n        damage,\n        xpToNextLevel\n    });\n\n    // Ensure specific number of legendary and mythic enemies\n    const legendaryCount = Math.floor(ENEMY_COUNT * 0.04);  // 4% of total\n    const mythicCount = Math.floor(ENEMY_COUNT * 0.01);     // 1% of total\n    \n    // Spawn legendary enemies\n    for (let i = 0; i < legendaryCount; i++) {\n        const enemy = createEnemy();\n        enemy.tier = 'legendary';\n        const pos = getRandomPositionInZone(4);  // Zone 4 for legendary\n        enemy.x = pos.x;\n        enemy.y = pos.y;\n        enemies.push(enemy);\n    }\n    \n    // Spawn mythic enemies\n    for (let i = 0; i < mythicCount; i++) {\n        const enemy = createEnemy();\n        enemy.tier = 'mythic';\n        const pos = getRandomPositionInZone(5);  // Zone 5 for mythic\n        enemy.x = pos.x;\n        enemy.y = pos.y;\n        enemies.push(enemy);\n    }\n    \n    // Spawn remaining enemies\n    const remainingCount = ENEMY_COUNT - legendaryCount - mythicCount;\n    for (let i = 0; i < remainingCount; i++) {\n        enemies.push(createEnemy());\n    }\n\n    for (let i = 0; i < OBSTACLE_COUNT; i++) {\n        obstacles.push(createObstacle());\n    }\n\n    for (let i = 0; i < ITEM_COUNT; i++) {\n        items.push(createItem());\n    }\n\n    for (let i = 0; i < DECORATION_COUNT; i++) {\n        decorations.push(createDecoration());\n    }\n\n    // Emit initial state\n    socket.emit('currentPlayers', players);\n    socket.emit('enemiesUpdate', enemies);\n    socket.emit('obstaclesUpdate', obstacles);\n    socket.emit('itemsUpdate', items);\n    socket.emit('decorationsUpdate', decorations);\n    socket.emit('playerMoved', players[socket.id]);\n}\n\n// Add the XP requirement calculation function if it's missing\nfunction calculateXPRequirement(level) {\n    return Math.floor(BASE_XP_REQUIREMENT * Math.pow(XP_MULTIPLIER, level - 1));\n}\n\n// Mock Socket class implementation\nclass MockSocket {\n    constructor() {\n        this.eventHandlers = new Map();\n        this.id = 'player1';\n    }\n    on(event, handler) {\n        if (!this.eventHandlers.has(event)) {\n            this.eventHandlers.set(event, []);\n        }\n        this.eventHandlers.get(event)?.push(handler);\n    }\n    emit(event, data) {\n        self.postMessage({\n            type: 'socketEvent',\n            event,\n            data\n        });\n    }\n    getId() {\n        return this.id;\n    }\n}\n\nconst socket = new MockSocket();\n\n// Message handler\nself.onmessage = function(event) {\n    const { type, event: socketEvent, data } = event.data;\n    \n    switch (type) {\n        case 'init':\n            initializeGame(event.data);\n            break;\n        case 'socketEvent':\n            switch (socketEvent) {\ncase 'playerMovement':\n    const player = players[socket.id];\n    if (player) {\n        let newX = data.x;\n        let newY = data.y;\n\n        // Apply knockback to player position if it exists\n        if (player.knockbackX) {\n            player.knockbackX *= KNOCKBACK_RECOVERY_SPEED;\n            newX += player.knockbackX;\n            if (Math.abs(player.knockbackX) < 0.1) player.knockbackX = 0;\n        }\n        if (player.knockbackY) {\n            player.knockbackY *= KNOCKBACK_RECOVERY_SPEED;\n            newY += player.knockbackY;\n            if (Math.abs(player.knockbackY) < 0.1) player.knockbackY = 0;\n        }\n\n        // Check for item collisions\n        const ITEM_PICKUP_RADIUS = 40;  // Radius for item pickup\n        for (let i = items.length - 1; i >= 0; i--) {\n            const item = items[i];\n            const dx = newX - item.x;\n            const dy = newY - item.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < ITEM_PICKUP_RADIUS && player.inventory.length < MAX_INVENTORY_SIZE) {\n                // Add item to player's inventory\n                player.inventory.push(item);\n                \n                // Remove item from world\n                items.splice(i, 1);\n                \n                // Create new item to maintain item count\n                items.push(createItem());\n                \n                // Notify clients\n                socket.emit('inventoryUpdate', player.inventory);\n                socket.emit('itemCollected', { \n                    playerId: socket.id, \n                    itemId: item.id \n                });\n                socket.emit('itemsUpdate', items);\n            }\n        }\n\n        // Rest of the existing collision checks...\n        let collision = false;\n\n        // Check collision with enemies first\n        for (const enemy of enemies) {\n            const enemySize = ENEMY_SIZE * ENEMY_SIZE_MULTIPLIERS[enemy.tier];\n            \n            if (\n                newX < enemy.x + enemySize &&\n                newX + PLAYER_SIZE > enemy.x &&\n                newY < enemy.y + enemySize &&\n                newY + PLAYER_SIZE > enemy.y\n            ) {\n                collision = true;\n                console.log(enemy);\n                if (true) {\n                    // Enemy damages player\n                    player.health -= enemy.damage;\n                    socket.emit('playerDamaged', { playerId: player.id, health: player.health });\n\n                    // Player damages enemy\n                    enemy.health -= player.damage;  // Use player.damage instead of PLAYER_DAMAGE\n                    socket.emit('enemyDamaged', { enemyId: enemy.id, health: enemy.health });\n\n                    // Calculate knockback direction\n                    const dx = enemy.x - newX;\n                    const dy = enemy.y - newY;\n                    const distance = Math.sqrt(dx * dx + dy * dy);\n                    const normalizedDx = dx / distance;\n                    const normalizedDy = dy / distance;\n\n                    // Apply knockback to player's position immediately\n                    newX -= normalizedDx * KNOCKBACK_FORCE;\n                    newY -= normalizedDy * KNOCKBACK_FORCE;\n                    \n                    // Store knockback for gradual recovery\n                    player.knockbackX = -normalizedDx * KNOCKBACK_FORCE;\n                    player.knockbackY = -normalizedDy * KNOCKBACK_FORCE;\n\n                    // Check if enemy dies\n                    if (enemy.health <= 0) {\n                        const index = enemies.findIndex(e => e.id === enemy.id);\n                        if (index !== -1) {\n                            // Award XP before removing the enemy\n                            const xpGained = getXPFromEnemy(enemy);\n                            addXPToPlayer(player, xpGained);\n                            \n                            // Check for item drop and add directly to inventory\n                            const dropChance = DROP_CHANCES[enemy.tier];\n                            if (Math.random() < dropChance && player.inventory.length < MAX_INVENTORY_SIZE) {\n                                // Create item and add directly to player's inventory\n                                const newItem = {\n                                    id: Math.random().toString(36).substr(2, 9),\n                                    type: ['health_potion', 'speed_boost', 'shield'][Math.floor(Math.random() * 3)],\n                                    x: enemy.x,\n                                    y: enemy.y\n                                };\n                                player.inventory.push(newItem);\n                                \n                                // Notify about item pickup\n                                socket.emit('inventoryUpdate', player.inventory);\n                                socket.emit('itemCollected', { \n                                    playerId: player.id, \n                                    itemId: newItem.id,\n                                    itemType: newItem.type \n                                });\n                            }\n                            \n                            // Remove the dead enemy and create a new one\n                            enemies.splice(index, 1);\n                            socket.emit('enemyDestroyed', enemy.id);\n                            enemies.push(createEnemy());\n                        }\n                    }\n\n                    // Check if player dies\n                    if (player.health <= 0) {\n                        respawnPlayer(player);\n                        socket.emit('playerDied', player.id);\n                        socket.emit('playerRespawned', player);\n                        return;\n                    }\n                }\n                break;\n            }\n        }\n\n        // Check collision with obstacles\n        for (const obstacle of obstacles) {\n            if (\n                newX + PLAYER_SIZE > obstacle.x && \n                newX < obstacle.x + obstacle.width &&\n                newY + PLAYER_SIZE > obstacle.y &&\n                newY < obstacle.y + obstacle.height\n            ) {\n                collision = true;\n                if (obstacle.isEnemy) {\n                    player.health -= ENEMY_CORAL_DAMAGE;\n                    socket.emit('playerDamaged', { playerId: player.id, health: player.health });\n\n                    if (player.health <= 0) {\n                        respawnPlayer(player);\n                        socket.emit('playerDied', player.id);\n                        socket.emit('playerRespawned', player);\n                        return; // Exit early if player dies\n                    }\n                }\n                break;\n            }\n        }\n\n        // Update player position even if there was a collision (to apply knockback)\n        player.x = Math.max(0, Math.min(WORLD_WIDTH - PLAYER_SIZE, newX));\n        player.y = Math.max(0, Math.min(WORLD_HEIGHT - PLAYER_SIZE, newY));\n        player.angle = data.angle;\n        player.velocityX = data.velocityX;\n        player.velocityY = data.velocityY;\n\n        // Always emit the updated position\n        socket.emit('playerMoved', player);\n        if (player.health < player.maxHealth) {\n            player.health += 0.1;\n        }\n    }\n    break;\n\ncase 'collectItem':\n    var itemIndex = items.findIndex(function (item) { return item.id === data.itemId; });\n    if (itemIndex !== -1 && players[socket.id].inventory.length < MAX_INVENTORY_SIZE) {\n        var item = items[itemIndex];\n        players[socket.id].inventory.push(item);\n        items.splice(itemIndex, 1);\n        items.push(createItem());\n        socket.emit('itemCollected', { playerId: socket.id, itemId: data.itemId });\n    }\n    break;\ncase 'useItem':\n    var playerUsingItem = players[socket.id];\n    var inventoryIndex = playerUsingItem.inventory.findIndex(function (item) { return item.id === data.itemId; });\n    if (inventoryIndex !== -1) {\n        var item = playerUsingItem.inventory[inventoryIndex];\n        playerUsingItem.inventory.splice(inventoryIndex, 1);\n        switch (item.type) {\n            case 'health_potion':\n                playerUsingItem.health = Math.min(playerUsingItem.health + 50, PLAYER_MAX_HEALTH);\n                break;\n            case 'speed_boost':\n                // Implement speed boost\n                break;\n            case 'shield':\n                // Implement shield\n                break;\n        }\n        socket.emit('itemUsed', { playerId: socket.id, itemId: data.itemId });\n    }\n    break;\ncase 'requestRespawn':\n    var deadPlayer = players[socket.id];\n    if (deadPlayer) {\n        respawnPlayer(deadPlayer);\n    }\n    break;\n// ... (handle other socket events)\n}\nbreak;\n}\n};\n\n// Start enemy movement interval\nsetInterval(() => {\ntry {\nmoveEnemies();\n} catch (error) {\nconsole.error('Error in moveEnemies interval:', error);\n}\n}, 100);\n"],{type:"application/javascript"});class Ie{constructor(e=!1){var t,n;this.players=new Map,this.dots=[],this.DOT_SIZE=5,this.DOT_COUNT=20,this.PLAYER_ACCELERATION=.2,this.MAX_SPEED=4,this.FRICTION=.92,this.cameraX=0,this.cameraY=0,this.WORLD_WIDTH=1e4,this.WORLD_HEIGHT=2e3,this.keysPressed=new Set,this.enemies=new Map,this.PLAYER_MAX_HEALTH=100,this.ENEMY_MAX_HEALTH={common:20,uncommon:40,rare:60,epic:80,legendary:100,mythic:150},this.PLAYER_DAMAGE=10,this.ENEMY_DAMAGE=5,this.DAMAGE_COOLDOWN=1e3,this.lastDamageTime=0,this.ENEMY_COLORS={common:"#808080",uncommon:"#008000",rare:"#0000FF",epic:"#800080",legendary:"#FFA500",mythic:"#FF0000"},this.obstacles=[],this.ENEMY_CORAL_MAX_HEALTH=50,this.items=[],this.itemSprites={},this.isInventoryOpen=!1,this.isSinglePlayer=!1,this.worker=null,this.gameLoopId=null,this.socketHandlers=new Map,this.BASE_XP_REQUIREMENT=100,this.XP_MULTIPLIER=1.5,this.MAX_LEVEL=50,this.HEALTH_PER_LEVEL=10,this.DAMAGE_PER_LEVEL=2,this.floatingTexts=[],this.ENEMY_SIZE_MULTIPLIERS={common:1,uncommon:1.2,rare:1.4,epic:1.6,legendary:1.8,mythic:2},this.isPlayerDead=!1,this.MINIMAP_WIDTH=200,this.MINIMAP_HEIGHT=40,this.MINIMAP_PADDING=10,this.decorations=[],this.sands=[],this.useMouseControls=!1,this.mouseX=0,this.mouseY=0,this.showHitboxes=!0,this.playerHue=0,this.playerColor="hsl(0, 100%, 50%)",this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",(()=>this.resizeCanvas())),this.isSinglePlayer=e,this.playerSprite=new Image,this.playerSprite.src="./assets/player.png",this.colorPreviewCanvas=document.createElement("canvas"),this.colorPreviewCanvas.width=64,this.colorPreviewCanvas.height=64,this.colorPreviewCanvas.style.width="64px",this.colorPreviewCanvas.style.height="64px",this.colorPreviewCanvas.style.imageRendering="pixelated";const s=document.createElement("div");s.style.display="flex",s.style.justifyContent="center",s.style.marginTop="10px",s.appendChild(this.colorPreviewCanvas),null===(t=document.querySelector(".color-picker"))||void 0===t||t.appendChild(s);const i=document.getElementById("hueSlider"),o=document.getElementById("colorPreview");if(i&&o){const e=localStorage.getItem("playerHue");null!==e&&(this.playerHue=parseInt(e),i.value=e,this.playerColor=`hsl(${this.playerHue}, 100%, 50%)`,o.style.backgroundColor=this.playerColor,this.updateColorPreview()),i.addEventListener("input",(e=>{const t=e.target.value;o.style.backgroundColor=`hsl(${t}, 100%, 50%)`}));const t=document.getElementById("updateColorButton");t&&(console.log("Update color button found"),t.addEventListener("click",(()=>{const e=i.value;localStorage.setItem("playerHue",e),console.log("Player hue saved:",e),this.playerHue=parseInt(e),this.playerColor=`hsl(${this.playerHue}, 100%, 50%)`,this.playerSprite.complete&&this.updateColorPreview(),this.showFloatingText(this.canvas.width/2,50,"Color Updated!","#4CAF50",20)})))}this.playerSprite.onload=()=>{console.log("Player sprite loaded successfully"),this.updateColorPreview(),this.gameLoop()},this.playerSprite.onerror=e=>{console.error("Error loading player sprite:",e)},this.octopusSprite=new Image,this.octopusSprite.src="./assets/octopus.png",this.fishSprite=new Image,this.fishSprite.src="./assets/fish.png",this.coralSprite=new Image,this.coralSprite.src="./assets/coral.png",this.palmSprite=new Image,this.palmSprite.src="./assets/palm.png",this.palmSprite.onerror=e=>{console.error("Error loading palm sprite:",e)},this.setupEventListeners(),this.setupItemSprites(),this.titleScreen=document.querySelector(".center_text"),this.nameInput=document.getElementById("nameInput"),this.isSinglePlayer?(this.initSinglePlayerMode(),this.hideTitleScreen()):this.initMultiPlayerMode(),this.authenticate();const r=document.getElementById("respawnButton");null==r||r.addEventListener("click",(()=>{this.isPlayerDead&&this.socket.emit("requestRespawn")})),this.canvas.addEventListener("mousemove",(e=>{if(this.useMouseControls){const t=this.canvas.getBoundingClientRect();this.mouseX=e.clientX-t.left+this.cameraX,this.mouseY=e.clientY-t.top+this.cameraY}})),this.exitButton=document.getElementById("exitButton"),this.exitButtonContainer=document.getElementById("exitButtonContainer"),null===(n=this.exitButton)||void 0===n||n.addEventListener("click",(()=>this.handleExit()))}authenticate(){var e;const t={username:localStorage.getItem("username")||"player1",password:localStorage.getItem("password")||"password123",playerName:(null===(e=this.nameInput)||void 0===e?void 0:e.value)||"Anonymous"};this.socket.emit("authenticate",t),this.socket.on("authenticated",(e=>{if(e.success){if(console.log("Authentication successful"),e.player&&this.socket.id){const t=this.players.get(this.socket.id);t&&Object.assign(t,e.player)}}else console.error("Authentication failed:",e.error),alert("Authentication failed: "+e.error),localStorage.removeItem("currentUser"),window.location.reload()}))}initSinglePlayerMode(){console.log("Initializing single player mode");try{this.worker=new Worker(URL.createObjectURL(ke));const e=this.loadPlayerProgress();console.log("Loaded saved progress:",e);const t={id:"player1",emit:(e,t)=>{var n;console.log("Emitting event:",e,t),null===(n=this.worker)||void 0===n||n.postMessage({type:"socketEvent",event:e,data:t})},on:(e,t)=>{console.log("Registering handler for event:",e),this.socketHandlers.set(e,t)},disconnect:()=>{var e;null===(e=this.worker)||void 0===e||e.terminate()}};this.socket=t,this.setupSocketListeners(),this.worker.onmessage=e=>{const{type:t,event:n,data:s}=e.data;if("socketEvent"===t){const e=this.socketHandlers.get(n);e&&e(s)}},console.log("Sending init message to worker with saved progress"),this.worker.postMessage({type:"init",savedProgress:{level:e.level,xp:e.xp,maxHealth:e.maxHealth,damage:e.damage}})}catch(e){console.error("Error initializing worker:",e)}this.showExitButton()}initMultiPlayerMode(){this.socket=_e(prompt("Enter the server URL eg https://localhost:3000: \n Join a public server: https://54.151.123.177:3000/")||"",{secure:!0,rejectUnauthorized:!1,withCredentials:!0}),this.socket.on("connect",(()=>{this.hideTitleScreen(),this.showExitButton()})),this.setupSocketListeners()}setupSocketListeners(){this.socket.on("connect",(()=>{})),this.socket.on("currentPlayers",(e=>{this.players.clear(),Object.values(e).forEach((e=>{this.players.set(e.id,Object.assign(Object.assign({},e),{imageLoaded:!0,score:0,velocityX:0,velocityY:0,health:this.PLAYER_MAX_HEALTH}))}))})),this.socket.on("newPlayer",(e=>{this.players.set(e.id,Object.assign(Object.assign({},e),{imageLoaded:!0,score:0,velocityX:0,velocityY:0,health:this.PLAYER_MAX_HEALTH}))})),this.socket.on("playerMoved",(e=>{const t=this.players.get(e.id);t?Object.assign(t,e):this.players.set(e.id,Object.assign(Object.assign({},e),{imageLoaded:!0,score:0,velocityX:0,velocityY:0,health:this.PLAYER_MAX_HEALTH}))})),this.socket.on("playerDisconnected",(e=>{this.players.delete(e)})),this.socket.on("dotCollected",(e=>{const t=this.players.get(e.playerId);t&&t.score++,this.dots.splice(e.dotIndex,1),this.generateDot()})),this.socket.on("enemiesUpdate",(e=>{this.enemies.clear(),e.forEach((e=>this.enemies.set(e.id,e)))})),this.socket.on("enemyMoved",(e=>{this.enemies.set(e.id,e)})),this.socket.on("playerDamaged",(e=>{const t=this.players.get(e.playerId);t&&(t.health=e.health)})),this.socket.on("enemyDamaged",(e=>{const t=this.enemies.get(e.enemyId);t&&(t.health=e.health)})),this.socket.on("enemyDestroyed",(e=>{this.enemies.delete(e)})),this.socket.on("obstaclesUpdate",(e=>{this.obstacles=e})),this.socket.on("obstacleDamaged",(e=>{const t=this.obstacles.find((t=>t.id===e.obstacleId));t&&t.isEnemy&&(t.health=e.health)})),this.socket.on("obstacleDestroyed",(e=>{const t=this.obstacles.findIndex((t=>t.id===e));-1!==t&&this.obstacles.splice(t,1)})),this.socket.on("itemsUpdate",(e=>{this.items=e})),this.socket.on("itemCollected",(e=>{this.items=this.items.filter((t=>t.id!==e.itemId))})),this.socket.on("inventoryUpdate",(e=>{const t=this.socket.id;if(t){const n=this.players.get(t);n&&(n.inventory=e)}})),this.socket.on("xpGained",(e=>{const t=this.players.get(e.playerId);t&&(t.xp=e.totalXp,t.level=e.level,t.xpToNextLevel=e.xpToNextLevel,t.maxHealth=e.maxHealth,t.damage=e.damage,this.showFloatingText(t.x,t.y-20,"+"+e.xp+" XP","#32CD32",16),this.savePlayerProgress(t))})),this.socket.on("levelUp",(e=>{const t=this.players.get(e.playerId);t&&(t.level=e.level,t.maxHealth=e.maxHealth,t.damage=e.damage,this.showFloatingText(t.x,t.y-30,"Level Up! Level "+e.level,"#FFD700",24),this.savePlayerProgress(t))})),this.socket.on("playerLostLevel",(e=>{const t=this.players.get(e.playerId);t&&(t.level=e.level,t.maxHealth=e.maxHealth,t.damage=e.damage,t.xp=e.xp,t.xpToNextLevel=e.xpToNextLevel,this.showFloatingText(t.x,t.y-30,"Level Lost! Level "+e.level,"#FF0000",24),this.savePlayerProgress(t))})),this.socket.on("playerRespawned",(e=>{const t=this.players.get(e.id);t&&(Object.assign(t,e),e.id===this.socket.id&&(this.isPlayerDead=!1,this.hideDeathScreen()),this.showFloatingText(e.x,e.y-50,"Respawned!","#FFFFFF",20))})),this.socket.on("playerDied",(e=>{e===this.socket.id&&(this.isPlayerDead=!0,this.showDeathScreen())})),this.socket.on("decorationsUpdate",(e=>{this.decorations=e})),this.socket.on("sandsUpdate",(e=>{this.sands=e}))}setupEventListeners(){var e;document.addEventListener("keydown",(e=>{if("i"!==e.key&&"I"!==e.key){if("c"===e.key||"C"===e.key)return this.useMouseControls=!this.useMouseControls,void this.showFloatingText(this.canvas.width/2,50,"Controls: "+(this.useMouseControls?"Mouse":"Keyboard"),"#FFFFFF",20);if(this.isInventoryOpen){if(e.key>="1"&&e.key<="5"){const t=parseInt(e.key)-1;this.useItemFromInventory(t)}}else this.keysPressed.add(e.key),this.updatePlayerVelocity()}else this.toggleInventory()})),document.addEventListener("keyup",(e=>{this.keysPressed.delete(e.key),this.updatePlayerVelocity()})),document.addEventListener("keydown",(e=>{"h"!==e.key&&"H"!==e.key||(this.showHitboxes=!this.showHitboxes,this.showFloatingText(this.canvas.width/2,50,"Hitboxes: "+(this.showHitboxes?"ON":"OFF"),"#FFFFFF",20))})),null===(e=this.nameInput)||void 0===e||e.addEventListener("change",(()=>{this.socket&&this.nameInput&&this.socket.emit("updateName",this.nameInput.value)}))}updatePlayerVelocity(){var e,t;const n=this.isSinglePlayer?this.players.get("player1"):this.players.get((null===(e=this.socket)||void 0===e?void 0:e.id)||"");if(n){if(this.useMouseControls){const e=this.mouseX-n.x,t=this.mouseY-n.y,s=Math.sqrt(e*e+t*t);s>5?(n.velocityX+=e/s*this.PLAYER_ACCELERATION,n.velocityY+=t/s*this.PLAYER_ACCELERATION,n.angle=Math.atan2(t,e)):(n.velocityX*=this.FRICTION,n.velocityY*=this.FRICTION)}else{let e=0,t=0;if(this.keysPressed.has("ArrowUp")&&(t-=1),this.keysPressed.has("ArrowDown")&&(t+=1),this.keysPressed.has("ArrowLeft")&&(e-=1),this.keysPressed.has("ArrowRight")&&(e+=1),0!==e||0!==t){if(n.angle=Math.atan2(t,e),0!==e&&0!==t){const n=Math.sqrt(e*e+t*t);e/=n,t/=n}n.velocityX+=e*this.PLAYER_ACCELERATION,n.velocityY+=t*this.PLAYER_ACCELERATION}else n.velocityX*=this.FRICTION,n.velocityY*=this.FRICTION}const e=Math.sqrt(Math.pow(n.velocityX,2)+Math.pow(n.velocityY,2));if(e>this.MAX_SPEED){const t=this.MAX_SPEED/e;n.velocityX*=t,n.velocityY*=t}const s=n.x+n.velocityX,i=n.y+n.velocityY;n.x=Math.max(0,Math.min(this.WORLD_WIDTH,s)),n.y=Math.max(0,Math.min(this.WORLD_HEIGHT,i)),this.isSinglePlayer?null===(t=this.worker)||void 0===t||t.postMessage({type:"socketEvent",event:"playerMovement",data:{x:n.x,y:n.y,angle:n.angle,velocityX:n.velocityX,velocityY:n.velocityY}}):this.socket.emit("playerMovement",{x:n.x,y:n.y,angle:n.angle,velocityX:n.velocityX,velocityY:n.velocityY})}}updateCamera(e){this.cameraX=e.x-this.canvas.width/2,this.cameraY=e.y-this.canvas.height/2,this.cameraX=Math.max(0,Math.min(this.WORLD_WIDTH-this.canvas.width,this.cameraX)),this.cameraY=Math.max(0,Math.min(this.WORLD_HEIGHT-this.canvas.height,this.cameraY))}updatePlayerPosition(e){const t=e.x+e.velocityX,n=e.y+e.velocityY;let s=!1;for(const e of this.obstacles)if(t<e.x+e.width&&t+40>e.x&&n<e.y+e.height&&n+40>e.y){s=!0;break}s?(e.velocityX=0,e.velocityY=0):(e.x=t,e.y=n),0===e.velocityX&&0===e.velocityY||(e.angle=Math.atan2(e.velocityY,e.velocityX)),0===this.keysPressed.size&&(e.velocityX*=this.FRICTION,e.velocityY*=this.FRICTION),e.x=Math.max(0,Math.min(this.WORLD_WIDTH,e.x)),e.y=Math.max(0,Math.min(this.WORLD_HEIGHT,e.y)),this.socket.emit("playerMovement",{x:e.x,y:e.y,angle:e.angle,velocityX:e.velocityX,velocityY:e.velocityY}),this.checkDotCollision(e),this.checkEnemyCollision(e),this.updateCamera(e),this.checkItemCollision(e)}generateDots(){for(let e=0;e<this.DOT_COUNT;e++)this.generateDot()}generateDot(){const e={x:Math.random()*this.WORLD_WIDTH,y:Math.random()*this.WORLD_HEIGHT};this.dots.push(e)}checkDotCollision(e){for(let t=this.dots.length-1;t>=0;t--){const n=this.dots[t],s=e.x-n.x,i=e.y-n.y;Math.sqrt(s*s+i*i)<this.DOT_SIZE+20&&(this.socket.emit("collectDot",t),e.score++,this.dots.splice(t,1),this.generateDot())}}checkEnemyCollision(e){const t=Date.now();t-this.lastDamageTime<this.DAMAGE_COOLDOWN||this.enemies.forEach(((n,s)=>{const i=e.x-n.x,o=e.y-n.y;Math.sqrt(i*i+o*o)<40&&(this.lastDamageTime=t,this.socket.emit("collision",{enemyId:s}))}))}checkItemCollision(e){this.items.forEach((t=>{const n=e.x-t.x,s=e.y-t.y;Math.sqrt(n*n+s*s)<40&&this.socket.emit("collectItem",t.id)}))}toggleInventory(){this.isInventoryOpen=!this.isInventoryOpen}useItemFromInventory(e){const t=this.socket.id;if(t){const n=this.players.get(t);n&&n.inventory[e]&&this.socket.emit("useItem",n.inventory[e].id)}}renderInventoryMenu(){const e=this.socket.id;if(!e)return;const t=this.players.get(e);t&&(this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="rgba(200, 200, 200, 0.8)",this.ctx.fillRect(200,100,400,400),this.ctx.fillStyle="black",this.ctx.font="24px Arial",this.ctx.fillText("Inventory",350,140),t.inventory.forEach(((e,t)=>{const n=250+t%3*100,s=200+100*Math.floor(t/3);this.ctx.fillStyle="white",this.ctx.fillRect(n,s,80,80);const i=this.itemSprites[e.type];this.ctx.drawImage(i,n+10,s+10,60,60),this.ctx.fillStyle="black",this.ctx.font="16px Arial",this.ctx.fillText(`${t+1}`,n+5,s+20)})),this.ctx.fillStyle="black",this.ctx.font="16px Arial",this.ctx.fillText("Press 1-5 to use an item",300,480),this.ctx.fillText("Press I to close inventory",300,510))}handlePlayerMoved(e){const t=this.players.get(e.id);t&&(Object.assign(t,e),this.isSinglePlayer&&this.updateCamera(t))}handleEnemiesUpdate(e){this.enemies.clear(),e.forEach((e=>this.enemies.set(e.id,e)))}gameLoop(){var e;if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#00FFFF",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.isInventoryOpen)this.renderInventoryMenu();else{const t=null===(e=this.socket)||void 0===e?void 0:e.id;if(t){const e=this.players.get(t);e&&this.updateCamera(e)}this.ctx.save(),this.ctx.translate(-this.cameraX,-this.cameraY),this.ctx.strokeStyle="black",this.ctx.strokeRect(0,0,this.WORLD_WIDTH,this.WORLD_HEIGHT);const n=[{name:"Common",end:2e3,color:"rgba(128, 128, 128, 0.1)"},{name:"Uncommon",end:4e3,color:"rgba(144, 238, 144, 0.1)"},{name:"Rare",end:6e3,color:"rgba(0, 0, 255, 0.1)"},{name:"Epic",end:8e3,color:"rgba(128, 0, 128, 0.1)"},{name:"Legendary",end:9e3,color:"rgba(255, 165, 0, 0.1)"},{name:"Mythic",end:this.WORLD_WIDTH,color:"rgba(255, 0, 0, 0.1)"}];let s=0;n.forEach((e=>{this.ctx.fillStyle=e.color,this.ctx.fillRect(s,0,e.end-s,this.WORLD_HEIGHT),this.ctx.fillStyle="black",this.ctx.font="20px Arial",this.ctx.fillText(e.name,s+10,30),s=e.end})),this.ctx.fillStyle="yellow",this.dots.forEach((e=>{this.ctx.beginPath(),this.ctx.arc(e.x,e.y,this.DOT_SIZE,0,2*Math.PI),this.ctx.fill()})),this.sands.forEach((e=>{this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.fillStyle="#FFE4B5",this.ctx.beginPath(),this.ctx.moveTo(.8*e.radius,0);for(let t=0;t<=2*Math.PI;t+=Math.PI/8){const n=t+e.rotation,s=.9*e.radius,i=Math.cos(n)*s,o=Math.sin(n)*s;this.ctx.lineTo(i,o)}this.ctx.closePath(),this.ctx.fill(),this.ctx.restore()})),this.decorations.forEach((e=>{this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.scale(e.scale,e.scale),this.ctx.drawImage(this.palmSprite,-this.palmSprite.width/2,-this.palmSprite.height/2),this.ctx.restore()})),this.players.forEach(((e,t)=>{var n,s;if(this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.rotate(e.angle),t===(null===(n=this.socket)||void 0===n?void 0:n.id)){const e=document.createElement("canvas");e.width=this.playerSprite.width,e.height=this.playerSprite.height;const t=e.getContext("2d");t.drawImage(this.playerSprite,0,0);const n=t.getImageData(0,0,e.width,e.height);this.applyHueRotation(t,n),t.putImageData(n,0,0),this.ctx.drawImage(e,-this.playerSprite.width/2,-this.playerSprite.height/2)}else this.ctx.drawImage(this.playerSprite,-this.playerSprite.width/2,-this.playerSprite.height/2);this.ctx.restore(),this.ctx.fillStyle="white",this.ctx.strokeStyle="black",this.ctx.lineWidth=2,this.ctx.font="16px Arial",this.ctx.textAlign="center";const i=e.name||"Anonymous";if(this.ctx.strokeText(i,e.x,e.y-50),this.ctx.fillText(i,e.x,e.y-50),t===(null===(s=this.socket)||void 0===s?void 0:s.id)){this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0);const t=20,n=100,s=200,i=20,o=30;this.ctx.fillStyle="black",this.ctx.fillRect(t,n,s,i),this.ctx.fillStyle="lime",this.ctx.fillRect(t,n,s*(e.health/e.maxHealth),i),this.ctx.fillStyle="white",this.ctx.font="16px Arial",this.ctx.textAlign="left",this.ctx.fillText(`Health: ${Math.round(e.health)}/${e.maxHealth}`,t+5,n+15),e.level<this.MAX_LEVEL&&(this.ctx.fillStyle="#4169E1",this.ctx.fillRect(t,n+o,s,i),this.ctx.fillStyle="#00FFFF",this.ctx.fillRect(t,n+o,s*(e.xp/e.xpToNextLevel),i),this.ctx.fillStyle="white",this.ctx.fillText(`XP: ${e.xp}/${e.xpToNextLevel}`,t+5,n+o+15)),this.ctx.fillStyle="#FFD700",this.ctx.font="20px Arial",this.ctx.fillText(`Level ${e.level}`,t,n-10),this.ctx.restore()}})),this.enemies.forEach((e=>{const t=this.ENEMY_SIZE_MULTIPLIERS[e.tier],n=40*t;this.ctx.save(),this.ctx.translate(e.x,e.y),this.ctx.rotate(e.angle),this.showHitboxes&&(this.ctx.strokeStyle="rgba(255, 0, 0, 0.5)",this.ctx.lineWidth=2,this.ctx.strokeRect(-n/2,-n/2,n,n),this.ctx.beginPath(),this.ctx.arc(0,0,2,0,2*Math.PI),this.ctx.fillStyle="rgba(255, 255, 0, 0.8)",this.ctx.fill(),this.ctx.fillStyle="white",this.ctx.font="12px Arial",this.ctx.fillText(`${Math.round(n)}x${Math.round(n)}`,0,n/2+20)),this.ctx.fillStyle=this.ENEMY_COLORS[e.tier],this.ctx.beginPath(),this.ctx.arc(0,0,n/2,0,2*Math.PI),this.ctx.fill(),"octopus"===e.type?this.ctx.drawImage(this.octopusSprite,-n/2,-n/2,n,n):this.ctx.drawImage(this.fishSprite,-n/2,-n/2,n,n),this.ctx.restore();const s=this.ENEMY_MAX_HEALTH[e.tier],i=50*t;this.ctx.fillStyle="black",this.ctx.fillRect(e.x-i/2,e.y-n/2-10,i,5),this.ctx.fillStyle="lime",this.ctx.fillRect(e.x-i/2,e.y-n/2-10,i*(e.health/s),5),this.ctx.fillStyle="white",this.ctx.font=12*t+"px Arial",this.ctx.fillText(e.tier.toUpperCase(),e.x-i/2,e.y+n/2+15)})),this.obstacles.forEach((e=>{"coral"===e.type&&(this.ctx.save(),this.ctx.translate(e.x,e.y),e.isEnemy&&(this.ctx.fillStyle="rgba(255, 0, 0, 0.3)",this.ctx.fillRect(0,0,e.width,e.height)),this.ctx.drawImage(this.coralSprite,0,0,e.width,e.height),e.isEnemy&&void 0!==e.health&&(this.ctx.fillStyle="red",this.ctx.fillRect(0,-10,e.width,5),this.ctx.fillStyle="green",this.ctx.fillRect(0,-10,e.width*(e.health/this.ENEMY_CORAL_MAX_HEALTH),5)),this.ctx.restore())})),this.items.forEach((e=>{const t=this.itemSprites[e.type];this.ctx.drawImage(t,e.x-15,e.y-15,30,30)}));const i=this.socket.id;if(i){const e=this.players.get(i);e&&e.inventory.forEach(((e,t)=>{const n=this.itemSprites[e.type];this.ctx.drawImage(n,10+40*t,10,30,30)}))}this.ctx.restore(),this.drawMinimap()}this.floatingTexts=this.floatingTexts.filter((e=>(e.y-=1,e.alpha-=1/e.lifetime,!(e.alpha<=0||(this.ctx.globalAlpha=e.alpha,this.ctx.fillStyle=e.color,this.ctx.font=e.fontSize+"px Arial",this.ctx.fillText(e.text,e.x,e.y),this.ctx.globalAlpha=1,0))))),this.isPlayerDead||this.updatePlayerVelocity(),this.gameLoopId=requestAnimationFrame((()=>this.gameLoop()))}setupItemSprites(){["health_potion","speed_boost","shield"].forEach((e=>{const t=new Image;t.src=`./assets/${e}.png`,this.itemSprites[e]=t}))}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight}cleanup(){var e;if(this.isSinglePlayer&&(null===(e=this.socket)||void 0===e?void 0:e.id)){const e=this.players.get(this.socket.id);e&&this.savePlayerProgress(e)}this.gameLoopId&&cancelAnimationFrame(this.gameLoopId),this.worker&&(this.worker.terminate(),this.worker=null),this.socket&&this.socket.disconnect(),this.players.clear(),this.enemies.clear(),this.dots=[],this.obstacles=[],this.items=[],this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.titleScreen&&(this.titleScreen.style.display="flex",this.titleScreen.style.opacity="1",this.titleScreen.style.zIndex="1000"),this.nameInput&&(this.nameInput.style.display="block",this.nameInput.style.opacity="1"),this.hideExitButton();const t=document.getElementById("gameMenu");t&&(t.style.display="flex",t.style.opacity="1",t.style.zIndex="3000"),this.canvas.style.zIndex="0"}loadPlayerProgress(){const e=localStorage.getItem("playerProgress");return e?JSON.parse(e):{level:1,xp:0,maxHealth:this.PLAYER_MAX_HEALTH,damage:this.PLAYER_DAMAGE}}savePlayerProgress(e){const t={level:e.level,xp:e.xp,maxHealth:e.maxHealth,damage:e.damage};localStorage.setItem("playerProgress",JSON.stringify(t))}calculateXPRequirement(e){return Math.floor(this.BASE_XP_REQUIREMENT*Math.pow(this.XP_MULTIPLIER,e-1))}showFloatingText(e,t,n,s,i){this.floatingTexts.push({x:e,y:t,text:n,color:s,fontSize:i,alpha:1,lifetime:60})}showDeathScreen(){const e=document.getElementById("deathScreen");e&&(e.style.display="flex")}hideDeathScreen(){const e=document.getElementById("deathScreen");e&&(e.style.display="none")}drawMinimap(){var e;const t=this.canvas.width-this.MINIMAP_WIDTH-this.MINIMAP_PADDING,n=this.MINIMAP_PADDING;this.ctx.fillStyle="rgba(0, 0, 0, 0.5)",this.ctx.fillRect(t,n,this.MINIMAP_WIDTH,this.MINIMAP_HEIGHT),[{color:"rgba(128, 128, 128, 0.5)"},{color:"rgba(144, 238, 144, 0.5)"},{color:"rgba(0, 0, 255, 0.5)"},{color:"rgba(128, 0, 128, 0.5)"},{color:"rgba(255, 165, 0, 0.5)"},{color:"rgba(255, 0, 0, 0.5)"}].forEach(((e,s)=>{const i=this.MINIMAP_WIDTH/6;this.ctx.fillStyle=e.color,this.ctx.fillRect(t+s*i,n,i,this.MINIMAP_HEIGHT)}));const s=null===(e=this.socket)||void 0===e?void 0:e.id;if(s){const e=this.players.get(s);if(e){const s=t+e.x/this.WORLD_WIDTH*this.MINIMAP_WIDTH,i=n+e.y/this.WORLD_HEIGHT*this.MINIMAP_HEIGHT;this.ctx.fillStyle="yellow",this.ctx.beginPath(),this.ctx.arc(s,i,2,0,2*Math.PI),this.ctx.fill()}}}hideTitleScreen(){this.titleScreen&&(this.titleScreen.style.display="none",this.titleScreen.style.opacity="0"),this.nameInput&&(this.nameInput.style.display="none",this.nameInput.style.opacity="0");const e=document.getElementById("gameMenu");e&&(e.style.display="none",e.style.opacity="0"),this.canvas.style.zIndex="1"}showExitButton(){this.exitButtonContainer&&(this.exitButtonContainer.style.display="block")}hideExitButton(){this.exitButtonContainer&&(this.exitButtonContainer.style.display="none")}handleExit(){this.cleanup(),this.titleScreen&&(this.titleScreen.style.display="flex",this.titleScreen.style.opacity="1",this.titleScreen.style.zIndex="1000"),this.nameInput&&(this.nameInput.style.display="block",this.nameInput.style.opacity="1"),this.hideExitButton();const e=document.getElementById("gameMenu");e&&(e.style.display="flex",e.style.opacity="1",e.style.zIndex="3000"),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.canvas.style.zIndex="0"}applyHueRotation(e,t){const n=t.data;for(let e=0;e<n.length;e+=4){if(0===n[e+3])continue;const t=n[e]/255,s=n[e+1]/255,i=n[e+2]/255,o=Math.max(t,s,i),r=Math.min(t,s,i);let a,h,c=(o+r)/2;if(o===r)a=h=0;else{const e=o-r;switch(h=c>.5?e/(2-o-r):e/(o+r),o){case t:a=(s-i)/e+(s<i?6:0);break;case s:a=(i-t)/e+2;break;case i:a=(t-s)/e+4;break;default:a=0}a/=6}if(h>.1)if(a=(a+this.playerHue/360)%1,0===h)n[e]=n[e+1]=n[e+2]=255*c;else{const t=(e,t,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e),s=c<.5?c*(1+h):c+h-c*h,i=2*c-s;n[e]=255*t(i,s,a+1/3),n[e+1]=255*t(i,s,a),n[e+2]=255*t(i,s,a-1/3)}}}updateColorPreview(){if(!this.playerSprite.complete)return;const e=this.colorPreviewCanvas.getContext("2d");e.clearRect(0,0,this.colorPreviewCanvas.width,this.colorPreviewCanvas.height);const t=Math.min(this.colorPreviewCanvas.width/this.playerSprite.width,this.colorPreviewCanvas.height/this.playerSprite.height),n=(this.colorPreviewCanvas.width-this.playerSprite.width*t)/2,s=(this.colorPreviewCanvas.height-this.playerSprite.height*t)/2;e.save(),e.translate(n,s),e.scale(t,t),e.drawImage(this.playerSprite,0,0);const i=e.getImageData(0,0,this.colorPreviewCanvas.width,this.colorPreviewCanvas.height);this.applyHueRotation(e,i),e.putImageData(i,0,0),e.restore()}}var be=function(e,t,n,s){return new(n||(n=Promise))((function(i,o){function r(e){try{h(s.next(e))}catch(e){o(e)}}function a(e){try{h(s.throw(e))}catch(e){o(e)}}function h(e){e.done?i(e.value):function(e){return e instanceof n?e:new n((function(t){t(e)}))}(e.value).then(r,a)}h((s=s.apply(e,t||[])).next())}))};new class{constructor(){this.authContainer=document.getElementById("authContainer"),this.loginForm=document.getElementById("loginForm"),this.registerForm=document.getElementById("registerForm"),this.loginButton=document.getElementById("loginButton"),this.loginUsername=document.getElementById("loginUsername"),this.loginPassword=document.getElementById("loginPassword"),this.registerButton=document.getElementById("registerButton"),this.registerOfflineButton=document.getElementById("registerOfflineButton"),this.registerUsername=document.getElementById("registerUsername"),this.registerPassword=document.getElementById("registerPassword"),this.registerConfirmPassword=document.getElementById("registerConfirmPassword"),this.serverIPInput=document.getElementById("serverIP"),this.serverIPInput.value="https://localhost:3000",this.serverUrl=this.serverIPInput.value,this.showRegisterLink=document.getElementById("showRegister"),this.showLoginLink=document.getElementById("showLogin"),this.loginButton.addEventListener("click",(()=>this.handleLogin())),this.registerButton.addEventListener("click",(()=>this.handleRegister())),this.registerOfflineButton.addEventListener("click",(()=>this.handleOfflineRegister())),this.showRegisterLink.addEventListener("click",(()=>this.toggleForms())),this.showLoginLink.addEventListener("click",(()=>this.toggleForms())),this.serverIPInput.addEventListener("change",(()=>{this.serverUrl=this.serverIPInput.value,localStorage.setItem("serverUrl",this.serverUrl)}));const e=localStorage.getItem("serverUrl");e&&(this.serverUrl=e,this.serverIPInput.value=e),this.checkStoredCredentials()}toggleForms(){this.loginForm.classList.toggle("hidden"),this.registerForm.classList.toggle("hidden"),this.loginForm.classList.contains("hidden")||(this.serverUrl=this.serverIPInput.value)}handleLogin(){return be(this,void 0,void 0,(function*(){const e=this.loginUsername.value,t=this.loginPassword.value;this.serverUrl=this.serverIPInput.value;const n=this.serverIPInput.value||this.serverUrl;try{if((yield fetch(`${n}/auth/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:t}),credentials:"include"})).ok)localStorage.setItem("username",e),localStorage.setItem("password",t),localStorage.setItem("currentUser",e),localStorage.setItem("serverUrl",n),sessionStorage.removeItem("isOffline"),this.hideAuthForm();else{const n=JSON.parse(sessionStorage.getItem("offlineCredentials")||"{}");n.username===e&&n.password===t&&n.isOffline?(sessionStorage.setItem("currentUser",e),sessionStorage.setItem("isOffline","true"),this.hideAuthForm()):alert("Invalid username or password")}}catch(n){console.error("Login error:",n);const s=JSON.parse(sessionStorage.getItem("offlineCredentials")||"{}");s.username===e&&s.password===t&&s.isOffline?(sessionStorage.setItem("currentUser",e),sessionStorage.setItem("isOffline","true"),this.hideAuthForm()):alert("Invalid username or password")}}))}handleRegister(){return be(this,void 0,void 0,(function*(){const e=this.registerUsername.value,t=this.registerPassword.value,n=this.registerConfirmPassword.value,s=prompt("Enter server IP address");if(alert(s),s)if(t===n)try{const n=yield fetch(`${s}/auth/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:t}),credentials:"include"});if(n.ok){const n=this.getStoredCredentials();n.push({username:e,password:t}),localStorage.setItem("credentials",JSON.stringify(n)),localStorage.setItem("serverUrl",s),this.toggleForms(),alert("Registration successful! Please login.")}else{const e=yield n.json();alert(e.message||"Registration failed")}}catch(e){console.error("Registration error:",e),alert("Could not connect to server. Please check the server IP and try again.")}else alert("Passwords do not match");else alert("Please enter a server IP address")}))}handleOfflineRegister(){return be(this,void 0,void 0,(function*(){const e=this.registerUsername.value,t=this.registerPassword.value,n=this.registerConfirmPassword.value;if(!e||!t)return void alert("Username and password are required");if(t!==n)return void alert("Passwords do not match");if(this.getStoredCredentials().some((t=>t.username===e)))return void alert("Username already exists locally");const s={username:e,password:t,isOffline:!0};sessionStorage.setItem("offlineCredentials",JSON.stringify(s)),sessionStorage.setItem("currentUser",e),sessionStorage.setItem("isOffline","true"),this.toggleForms(),alert("Offline registration successful! Note: This account is temporary and will be lost when you close the browser.")}))}getStoredCredentials(){const e=localStorage.getItem("credentials");return e?JSON.parse(e):[]}checkStoredCredentials(){if(sessionStorage.getItem("isOffline")){const e=sessionStorage.getItem("currentUser"),t=JSON.parse(sessionStorage.getItem("offlineCredentials")||"{}");if(e&&t.username===e)return void this.hideAuthForm()}const e=localStorage.getItem("currentUser"),t=localStorage.getItem("username"),n=localStorage.getItem("password");e&&t&&n&&this.verifyStoredCredentials(t,n).then((e=>{e?this.hideAuthForm():this.logout()}))}verifyStoredCredentials(e,t){return be(this,void 0,void 0,(function*(){try{return(yield fetch(`${this.serverUrl}/auth/verify`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:t}),credentials:"include"})).ok}catch(e){return console.error("Verification error:",e),!1}}))}hideAuthForm(){this.authContainer.classList.add("hidden")}showAuthForm(){this.authContainer.classList.remove("hidden")}logout(){localStorage.removeItem("currentUser"),localStorage.removeItem("username"),localStorage.removeItem("password"),sessionStorage.removeItem("currentUser"),sessionStorage.removeItem("offlineCredentials"),sessionStorage.removeItem("isOffline"),sessionStorage.getItem("isOffline")||fetch(`${this.serverUrl}/auth/logout`,{method:"POST",credentials:"include"}).catch((e=>{console.error("Logout error:",e)})),this.showAuthForm()}};let we=null;window.onload=()=>{const e=document.getElementById("singlePlayerButton"),t=document.getElementById("multiPlayerButton");null==e||e.addEventListener("click",(()=>{we&&we.cleanup(),we=new Ie(!0)})),null==t||t.addEventListener("click",(()=>{we&&we.cleanup(),we=new Ie(!1)}))}})();
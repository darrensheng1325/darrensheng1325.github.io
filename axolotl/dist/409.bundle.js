(()=>{"use strict";const e=1e4,t=2e3,a={common:{start:0,end:2e3},uncommon:{start:2e3,end:4e3},rare:{start:4e3,end:6e3},epic:{start:6e3,end:8e3},legendary:{start:8e3,end:9e3},mythic:{start:9e3,end:e}},n=100,o=.9,r={common:{health:20,speed:.5,damage:5,probability:.4},uncommon:{health:40,speed:.75,damage:10,probability:.3},rare:{health:60,speed:1,damage:15,probability:.15},epic:{health:80,speed:1.25,damage:20,probability:.1},legendary:{health:100,speed:1.5,damage:25,probability:.04},mythic:{health:150,speed:2,damage:30,probability:.01}},i={},d=[],s=[],l=[],h=[],m={common:1,uncommon:1.2,rare:1.4,epic:1.6,legendary:1.8,mythic:2},c=[],p=[];function y(e){return Math.floor(100*Math.pow(1.5,e-1))}function k(e){return{common:10,uncommon:20,rare:40,epic:80,legendary:160,mythic:320}[e.tier]}function v(e,t){if(!(e.level>=50)){for(e.xp+=t;e.xp>=e.xpToNextLevel&&e.level<50;)e.xp-=e.xpToNextLevel,e.level++,e.xpToNextLevel=y(e.level),g(e);e.level>=50&&(e.xp=0,e.xpToNextLevel=0),u.emit("xpGained",{playerId:e.id,xp:t,totalXp:e.xp,level:e.level,xpToNextLevel:e.xpToNextLevel,maxHealth:e.maxHealth,damage:e.damage})}}function g(e){e.maxHealth+=10,e.health=e.maxHealth,e.damage+=2,u.emit("levelUp",{playerId:e.id,level:e.level,maxHealth:e.maxHealth,damage:e.damage})}function x(){const n=Math.random()*e;let o="common";for(const[e,t]of Object.entries(a))if(n>=t.start&&n<t.end){o=e;break}const i=r[o];return{id:Math.random().toString(36).substr(2,9),type:Math.random()<.5?"octopus":"fish",tier:o,x:n,y:Math.random()*t,angle:Math.random()*Math.PI*2,health:i.health,speed:i.speed,damage:i.damage,knockbackX:0,knockbackY:0}}function M(){const a=Math.random()<.3;return{id:Math.random().toString(36).substr(2,9),x:Math.random()*e,y:Math.random()*t,width:50+50*Math.random(),height:50+50*Math.random(),type:"coral",isEnemy:a,health:a?50:void 0}}function b(){return{id:Math.random().toString(36).substr(2,9),type:["health_potion","speed_boost","shield"][Math.floor(3*Math.random())],x:Math.random()*e,y:Math.random()*t}}const u=new class{constructor(){this.eventHandlers=new Map,this.id="player1",this.broadcast={emit:(e,t)=>{}}}on(e,t){this.eventHandlers.has(e)||this.eventHandlers.set(e,[]),this.eventHandlers.get(e)?.push(t)}emit(e,t){self.postMessage({type:"socketEvent",event:e,data:t})}getId(){return this.id}};function f(e){let n;n=e.level<=5?Math.random()*a.common.end:e.level<=10?a.uncommon.start+Math.random()*(a.uncommon.end-a.uncommon.start):e.level<=15?a.rare.start+Math.random()*(a.rare.end-a.rare.start):e.level<=25?a.epic.start+Math.random()*(a.epic.end-a.epic.start):e.level<=40?a.legendary.start+Math.random()*(a.legendary.end-a.legendary.start):a.mythic.start+Math.random()*(a.mythic.end-a.mythic.start),e.health=e.maxHealth,e.x=n,e.y=Math.random()*t,e.score=Math.max(0,e.score-10),e.inventory=[],e.isInvulnerable=!0,u.emit("playerRespawned",e),setTimeout((()=>{e.isInvulnerable=!1}),3e3)}self.onmessage=a=>{const{type:r,event:g,data:X,savedProgress:H}=a.data;switch(console.log("Worker received message:",r,{data:X,savedProgress:H}),r){case"init":!function(a){console.log("Initializing game state in worker",a);const n=a?.savedProgress||{level:1,xp:0,maxHealth:100,damage:10};console.log("Using saved progress:",n),i[u.id]={id:u.id,x:200,y:1e3,angle:0,score:0,velocityX:0,velocityY:0,health:n.maxHealth,maxHealth:n.maxHealth,damage:n.damage,inventory:[],isInvulnerable:!0,level:n.level,xp:n.xp,xpToNextLevel:y(n.level)},setTimeout((()=>{i[u.id]&&(i[u.id].isInvulnerable=!1)}),3e3);for(let e=0;e<50;e++)d.push(x());for(let e=0;e<20;e++)s.push(M());for(let e=0;e<10;e++)l.push(b());for(let a=0;a<20;a++)h.push({x:Math.random()*e,y:Math.random()*t});for(let a=0;a<100;a++)c.push({x:Math.random()*e,y:Math.random()*t,scale:.5+1.5*Math.random()});for(let e=0;e<50;e++)p.push({x:400*p.length+400*Math.random(),y:Math.random()*t,radius:50+70*Math.random(),rotation:Math.random()*Math.PI*2});console.log("Sending initial game state"),u.emit("currentPlayers",i),u.emit("enemiesUpdate",d),u.emit("obstaclesUpdate",s),u.emit("itemsUpdate",l),u.emit("playerMoved",i[u.id]),u.emit("decorationsUpdate",c),u.emit("sandsUpdate",p)}({savedProgress:a.data.savedProgress});break;case"socketEvent":switch(g){case"playerMovement":const e=i[u.id];if(e){let t=X.x,a=X.y;e.knockbackX&&(e.knockbackX*=o,t+=e.knockbackX,Math.abs(e.knockbackX)<.1&&(e.knockbackX=0)),e.knockbackY&&(e.knockbackY*=o,a+=e.knockbackY,Math.abs(e.knockbackY)<.1&&(e.knockbackY=0));let r=!1;for(const o of d){const i=40*m[o.tier];if(t<o.x+i&&t+40>o.x&&a<o.y+i&&a+40>o.y){if(r=!0,!e.isInvulnerable){e.health-=o.damage,u.emit("playerDamaged",{playerId:e.id,health:e.health}),o.health-=e.damage,u.emit("enemyDamaged",{enemyId:o.id,health:o.health});const r=o.x-t,i=o.y-a,s=Math.sqrt(r*r+i*i),l=r/s,h=i/s;if(t-=l*n,a-=h*n,e.knockbackX=-l*n,e.knockbackY=-h*n,o.health<=0){const t=d.findIndex((e=>e.id===o.id));if(-1!==t){v(e,k(o));const a=I[o.tier];if(Math.random()<a&&e.inventory.length<5){const t={id:Math.random().toString(36).substr(2,9),type:["health_potion","speed_boost","shield"][Math.floor(3*Math.random())],x:o.x,y:o.y};e.inventory.push(t),u.emit("inventoryUpdate",e.inventory),u.emit("itemCollected",{playerId:e.id,itemId:t.id,itemType:t.type})}d.splice(t,1),u.emit("enemyDestroyed",o.id),d.push(x())}}if(e.health<=0)return f(e),u.emit("playerDied",e.id),void u.emit("playerRespawned",e)}break}}for(const n of s)if(t<n.x+n.width&&t+40>n.x&&a<n.y+n.height&&a+40>n.y){if(r=!0,n.isEnemy&&!e.isInvulnerable&&(e.health-=5,u.emit("playerDamaged",{playerId:e.id,health:e.health}),e.health<=0))return f(e),u.emit("playerDied",e.id),void u.emit("playerRespawned",e);break}e.x=Math.max(0,Math.min(9960,t)),e.y=Math.max(0,Math.min(1960,a)),e.angle=X.angle,e.velocityX=X.velocityX,e.velocityY=X.velocityY,u.emit("playerMoved",e)}break;case"collectItem":const t=l.findIndex((e=>e.id===X.itemId));if(-1!==t&&i[u.id].inventory.length<5){const e=l[t];i[u.id].inventory.push(e),l.splice(t,1),l.push(b()),u.emit("itemCollected",{playerId:u.id,itemId:X.itemId})}break;case"useItem":const a=i[u.id],r=a.inventory.findIndex((e=>e.id===X.itemId));if(-1!==r){const e=a.inventory[r];a.inventory.splice(r,1),"health_potion"===e.type&&(a.health=Math.min(a.health+50,100)),u.emit("itemUsed",{playerId:u.id,itemId:X.itemId})}break;case"requestRespawn":const h=i[u.id];h&&f(h)}}},setInterval((()=>{var e,n;d.forEach((e=>{e.x,e.knockbackX&&(e.knockbackX*=o,e.x+=e.knockbackX,Math.abs(e.knockbackX)<.1&&(e.knockbackX=0)),e.knockbackY&&(e.knockbackY*=o,e.y+=e.knockbackY,Math.abs(e.knockbackY)<.1&&(e.knockbackY=0)),"octopus"===e.type?(e.x+=(4*Math.random()-2)*e.speed,e.y+=(4*Math.random()-2)*e.speed):(e.x+=2*Math.cos(e.angle)*e.speed,e.y+=2*Math.sin(e.angle)*e.speed);const n=a[e.tier];(e.x<n.start||e.x>=n.end)&&("fish"===e.type&&(e.angle=Math.PI-e.angle),e.x=Math.max(n.start,Math.min(n.end-1,e.x))),e.y=(e.y+t)%t,"fish"===e.type&&Math.random()<.02&&(e.angle=Math.random()*Math.PI*2)})),e="enemiesUpdate",n=d,self.postMessage({type:"socketEvent",event:e,data:n})}),100),self.onerror=e=>{console.error("Worker error:",e)};const I={common:.1,uncommon:.2,rare:.3,epic:.4,legendary:.5,mythic:.75}})();